"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[388],{388:function(e,n,a){a.r(n),a(7378);var t=a(2682);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},l.apply(this,arguments)}function i(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",l({components:n},a),(0,t.kt)("p",null,"Compilation 对象有很多可用的方法和钩子。在此页面，我们将会列举出这些可用的方法和属性。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"compilation-object-methods",parentName:"h2"}),"compilation 对象方法",(0,t.kt)("a",{href:"#compilation-object-methods","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getstats",parentName:"h3"}),"getStats",(0,t.kt)("a",{href:"#getstats","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"返回当前编译的状态对象。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addmodule",parentName:"h3"}),"addModule",(0,t.kt)("a",{href:"#addmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, cacheGroup)")),(0,t.kt)("p",null,"向当前编译添加一个模块。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要添加的模块"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"cacheGroup")," - 模块的 ",(0,t.kt)("inlineCode",{parentName:"li"},"cacheGroup"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getmodule",parentName:"h3"}),"getModule",(0,t.kt)("a",{href:"#getmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"通过编译的标识符获取其模块。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要获取的模块。标识符是通过编译使用 ",(0,t.kt)("inlineCode",{parentName:"li"},"module.identifier()")," 方法从模块中提取的。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"findmodule",parentName:"h3"}),"findModule",(0,t.kt)("a",{href:"#findmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"尝试通过其标识符搜索模块。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要搜索的模块。标识符是通过编译使用 ",(0,t.kt)("inlineCode",{parentName:"li"},"module.identifier()")," 方法从模块中提取的。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"buildmodule",parentName:"h3"}),"buildModule",(0,t.kt)("a",{href:"#buildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, optional, origin, dependencies)")),(0,t.kt)("p",null,"构建给定的模块。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要构建的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"optional")," - 可选标志。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"origin")," - 请求此模块构建的原始模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"dependencies")," - 要构建模块的可选依赖。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"processmoduledependencies",parentName:"h3"}),"processModuleDependencies",(0,t.kt)("a",{href:"#processmoduledependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, callback)")),(0,t.kt)("p",null,"处理给定模块依赖。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要被处理依赖的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 模块依赖处理完成时回调的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addentry",parentName:"h3"}),"addEntry",(0,t.kt)("a",{href:"#addentry","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (context, entry, name, callback)")),(0,t.kt)("p",null,"为编译添加入口。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"context")," - 入口的上下文路径。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"entry")," - 入口依赖。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 入口名称。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 添加入口完成之后回调的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"rebuildmodule",parentName:"h3"}),"rebuildModule",(0,t.kt)("a",{href:"#rebuildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, thisCallback)")),(0,t.kt)("p",null,"触发模块的重建。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要被重建的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"thisCallback")," - 模块重建完成之后调用的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"finish",parentName:"h3"}),"finish",(0,t.kt)("a",{href:"#finish","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (callback)")),(0,t.kt)("p",null,"完成编译并调用给定的回调。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 编译完成之后调用的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"seal",parentName:"h3"}),"seal",(0,t.kt)("a",{href:"#seal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (callback)")),(0,t.kt)("p",null,"封闭编译。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 封闭编译时回调的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"unseal",parentName:"h3"}),"unseal",(0,t.kt)("a",{href:"#unseal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"解除封闭编译。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 解除封闭编译时回调的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"reportdependencyerrorsandwarnings",parentName:"h3"}),"reportDependencyErrorsAndWarnings",(0,t.kt)("a",{href:"#reportdependencyerrorsandwarnings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, blocks)")),(0,t.kt)("p",null,"将给定模块的错误和警告添加到编译的错误和警告中。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要被报告错误与警告的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"blocks")," - 一组要报告的依赖块。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addchunkingroup",parentName:"h3"}),"addChunkInGroup",(0,t.kt)("a",{href:"#addchunkingroup","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (groupOptions, module, loc, request)")),(0,t.kt)("p",null,"将模块添加到现有 chunk 组或创建一个新的组。返回一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunkGroup"),"。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"groupOptions")," - chunk 组的选项。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 引用 chunk 组的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"loc")," - 引用 chunk 组的位置（模块内部）。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"request")," - 引用 chunk 组的请求。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addchunk",parentName:"h3"}),"addChunk",(0,t.kt)("a",{href:"#addchunk","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name)")),(0,t.kt)("p",null,"向 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation.chunks")," 创建或添加一个新的 chunk。返回这个 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk"),"."),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - chunk 的名称。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"assigndepth",parentName:"h3"}),"assignDepth",(0,t.kt)("a",{href:"#assigndepth","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"为给定的模块及其依赖块递归分配 ",(0,t.kt)("inlineCode",{parentName:"p"},"depth")," 。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要被分配 depth 的模块。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getdependencyreference",parentName:"h3"}),"getDependencyReference",(0,t.kt)("a",{href:"#getdependencyreference","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, dependency)")),(0,t.kt)("p",null,"返回给定模块对依赖的引用。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 有问题的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"dependency")," - 要引用的依赖。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"processdependenciesblocksforchunkgroups",parentName:"h3"}),"processDependenciesBlocksForChunkGroups",(0,t.kt)("a",{href:"#processdependenciesblocksforchunkgroups","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (inputChunkGroups)")),(0,t.kt)("p",null,"通过 ",(0,t.kt)("inlineCode",{parentName:"p"},"Module")," 图创建 ",(0,t.kt)("inlineCode",{parentName:"p"},"Chunk")," 图。该过程分为两个阶段完成。阶段一：遍历模块图，在 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunkDependencies")," 中创建一个基础 chunk 图。阶段二：通过基本 chunk 图遍历所有可能的方法并且跟踪可用模块。遍历过程中 ",(0,t.kt)("inlineCode",{parentName:"p"},"processDependenciesBlocksForChunkGroups")," 将 chunk 相互连接，并将 ",(0,t.kt)("inlineCode",{parentName:"p"},"Blocks")," 与 ",(0,t.kt)("inlineCode",{parentName:"p"},"Chunks")," 连接. 当一个 chunk 的所有模块都已经可用且未连接不需要的 chunk 时，它将停止遍历。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"inputChunkGroups")," - 被处理的 chunk 组。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"removereasonsofdependencyblock",parentName:"h3"}),"removeReasonsOfDependencyBlock",(0,t.kt)("a",{href:"#removereasonsofdependencyblock","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, block)")),(0,t.kt)("p",null,"移除模块与依赖块之间的关系。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要移除的模块关系。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"block")," - 依赖块。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"patchchunksafterreasonremoval",parentName:"h3"}),"patchChunksAfterReasonRemoval",(0,t.kt)("a",{href:"#patchchunksafterreasonremoval","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, chunk)")),(0,t.kt)("p",null,"删除依赖性原因后，修补模块和 chunk 的关系。被 ",(0,t.kt)("inlineCode",{parentName:"p"},"removeReasonsOfDependencyBlock")," 自动调用。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 要修复关系的模块。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," - 要修复关系的 chunk。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"removechunkfromdependencies",parentName:"h3"}),"removeChunkFromDependencies",(0,t.kt)("a",{href:"#removechunkfromdependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (block, chunk)")),(0,t.kt)("p",null,"在除去依赖性原因后，从依赖块模块和 chunk 中移除给定的 chunk。会被 ",(0,t.kt)("inlineCode",{parentName:"p"},"removeReasonsOfDependencyBlock")," 自动调用。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"block")," - ",(0,t.kt)("inlineCode",{parentName:"li"},"Chunk")," 的块连接。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," - 从依赖中删除的块。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"sortitemswithmoduleids",parentName:"h3"}),"sortItemsWithChunkIds",(0,t.kt)("a",{href:"#sortitemswithmoduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"summarizedependencies",parentName:"h3"}),"summarizeDependencies",(0,t.kt)("a",{href:"#summarizedependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createhash",parentName:"h3"}),"createHash",(0,t.kt)("a",{href:"#createhash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createmoduleassets",parentName:"h3"}),"createModuleAssets",(0,t.kt)("a",{href:"#createmoduleassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createchunkassets",parentName:"h3"}),"createChunkAssets",(0,t.kt)("a",{href:"#createchunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getpath",parentName:"h3"}),"getPath",(0,t.kt)("a",{href:"#getpath","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (filename, data)")),(0,t.kt)("p",null,"返回插值路径。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"filename")," - 用于通过哈希获取资源路径。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"data")," - 数据对象。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getpathwithinfo",parentName:"h3"}),"getPathWithInfo",(0,t.kt)("a",{href:"#getpathwithinfo","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (filename, data)")),(0,t.kt)("p",null,"返回插值路径和资源信息。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"filename")," - 用于通过哈希获取资源路径。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"data")," - 数据对象。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createchildcompiler",parentName:"h3"}),"createChildCompiler",(0,t.kt)("a",{href:"#createchildcompiler","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name, outputOptions, plugins)")),(0,t.kt)("p",null,"允许在 webpack 中运行另一个 webpack 实例。但是，子编译器会应用不同的设置和配置。他会从父编译器（或者顶级编译器）中复制所有的钩子(hook)和插件(plugin)，并且创建一个子 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 实例。 返回值为创建好的 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 实例。"),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 子 ",(0,t.kt)("inlineCode",{parentName:"li"},"Compiler")," 的名称。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"outputOptions")," - 输出选项。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"plugins")," - 将被提供的 webpack 插件。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"checkconstraints",parentName:"h3"}),"checkConstraints",(0,t.kt)("a",{href:"#checkconstraints","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"emitasset",parentName:"h3"}),"emitAsset",(0,t.kt)("a",{href:"#emitasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file, source, assetInfo = {})")),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," - 资源名称。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"source")," - 资源来源。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"assetInfo")," - 附加资源信息。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"updateasset",parentName:"h3"}),"updateAsset",(0,t.kt)("a",{href:"#updateasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file, newSourceOrFunction, assetInfoUpdateOrFunction)")),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," - 资源名称。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"newSourceOrFunction")," - 新资源来源或将旧资源转换为新资源的函数。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"assetInfoUpdateOrFunction")," - 新资源信息或将旧资源转换为新资源的函数。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"deleteasset",parentName:"h3"}),"deleteAsset",(0,t.kt)("a",{href:"#deleteasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file)")),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," —— 资源的文件名")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getassets",parentName:"h3"}),"getAssets",(0,t.kt)("a",{href:"#getassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"返回当前编译下所有资源的数组。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getasset",parentName:"h3"}),"getAsset",(0,t.kt)("a",{href:"#getasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name)")),(0,t.kt)("p",null,"参数："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 要返回的资源名称。")))}i.isMDXComponent=!0,n.default=i}}]);