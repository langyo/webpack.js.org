"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4951],{4951:function(e,a,n){n.r(a),n(7378);var t=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function l(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",p({components:a},n),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 模块是 webpack 的主要引擎，它通过 ",(0,t.kt)("a",{href:"/api/cli",parentName:"p"},"CLI")," 或者 ",(0,t.kt)("a",{href:"/api/node",parentName:"p"},"Node API"),"\n传递的所有选项创建出一个 compilation 实例。\n它扩展（extends）自 ",(0,t.kt)("inlineCode",{parentName:"p"},"Tapable")," 类，用来注册和调用插件。\n大多数面向用户的插件会首先在 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 上注册。"),(0,t.kt)("p",null,"在为 webpack 开发插件时，你可能需要知道每个钩子函数是在哪里调用的。想要了解这些内容，请在 webpack 源码中搜索 ",(0,t.kt)("inlineCode",{parentName:"p"},"hooks.<hook name>.call"),"。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"watching",parentName:"h2"}),"监听(watching)",(0,t.kt)("a",{href:"#watching","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 支持可以监控文件系统的 ",(0,t.kt)("a",{href:"/api/node/#watching",parentName:"p"},"监听(watching)")," 机制，并且在文件修改时重新编译。\n当处于监听模式(watch mode)时，\ncompiler 会触发诸如 ",(0,t.kt)("inlineCode",{parentName:"p"},"watchRun"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"watchClose")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"invalid")," 等额外的事件。\n通常在 ",(0,t.kt)("a",{href:"/guides/development",parentName:"p"},"开发环境")," 中使用，\n也常常会在 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpack-dev-server")," 这些工具的底层调用，\n由此开发人员无须每次都使用手动方式重新编译。\n还可以通过 ",(0,t.kt)("a",{href:"/api/cli/#watch-options",parentName:"p"},"CLI")," 进入监听模式。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"hooks",parentName:"h2"}),"钩子",(0,t.kt)("a",{href:"#hooks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"以下生命周期钩子函数，是由 ",(0,t.kt)("inlineCode",{parentName:"p"},"compiler")," 暴露，\n可以通过如下方式访问："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"someHook",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"params"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"取决于不同的钩子类型，也可以在某些钩子上访问 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapAsync")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise"),"。"),(0,t.kt)("p",null,"关于钩子类型的描述，请查看 ",(0,t.kt)("a",{href:"https://github.com/webpack/tapable#tapable",parentName:"p"},"Tapable 文档"),"."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"environment",parentName:"h3"}),"environment",(0,t.kt)("a",{href:"#environment","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在编译器准备环境时调用，时机就在配置文件中初始化插件之后。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterEnvironment-afterEnvironment",parentName:"h3"}),"afterEnvironment $#afterEnvironment$",(0,t.kt)("a",{href:"#afterEnvironment-afterEnvironment","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"当编译器环境设置完成后，在 ",(0,t.kt)("inlineCode",{parentName:"p"},"environment")," hook 后直接调用。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"entryoption",parentName:"h3"}),"entryOption",(0,t.kt)("a",{href:"#entryoption","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在 webpack 选项中的 ",(0,t.kt)("a",{href:"/configuration/entry-context/#entry",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"entry"))," 被处理过之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("a",{href:"/configuration/entry-context/#context",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"context")),", ",(0,t.kt)("a",{href:"/configuration/entry-context/#entry",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"entry")))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"entryOption",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"context",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," entry"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterplugins",parentName:"h3"}),"afterPlugins",(0,t.kt)("a",{href:"#afterplugins","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在初始化内部插件集合完成设置之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compiler"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterresolvers",parentName:"h3"}),"afterResolvers",(0,t.kt)("a",{href:"#afterresolvers","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"resolver 设置完成之后触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compiler"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"initialize",parentName:"h3"}),"initialize",(0,t.kt)("a",{href:"#initialize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"当编译器对象被初始化时调用。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforerun",parentName:"h3"}),"beforeRun",(0,t.kt)("a",{href:"#beforerun","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在开始执行一次构建之前调用，compiler.run 方法开始执行后立刻进行调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compiler"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"run",parentName:"h3"}),"run",(0,t.kt)("a",{href:"#run","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在开始读取 ",(0,t.kt)("a",{href:"/configuration/other-options/#recordspath",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"records"))," 之前调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compiler"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"watchrun",parentName:"h3"}),"watchRun",(0,t.kt)("a",{href:"#watchrun","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在监听模式下，一个新的 compilation 触发之后，但在 compilation 实际开始之前执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compiler"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"normalmodulefactory",parentName:"h3"}),"normalModuleFactory",(0,t.kt)("a",{href:"#normalmodulefactory","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,(0,t.kt)("a",{href:"/api/normalmodulefactory-hooks",parentName:"p"},"NormalModuleFactory")," 创建之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"normalModuleFactory"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"contextmodulefactory",parentName:"h3"}),"contextModuleFactory",(0,t.kt)("a",{href:"#contextmodulefactory","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,(0,t.kt)("a",{href:"/api/contextmodulefactory-hooks",parentName:"p"},"ContextModuleFactory")," 创建之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"contextModuleFactory"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforecompile",parentName:"h3"}),"beforeCompile",(0,t.kt)("a",{href:"#beforecompile","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在创建 compilation parameter 之后执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilationParams"))),(0,t.kt)("p",null,"初始化 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilationParams")," 变量的示例如下："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilationParams ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  normalModuleFactory",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  contextModuleFactory",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"此钩子可用于添加/修改 compilation parameter："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"beforeCompile",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapAsync"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"params",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  params",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin - data'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'important stuff my plugin will use later'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"compile",parentName:"h3"}),"compile",(0,t.kt)("a",{href:"#compile","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"beforeCompile")," 之后立即调用，但在一个新的 compilation 创建之前。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilationParams"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"thiscompilation",parentName:"h3"}),"thisCompilation",(0,t.kt)("a",{href:"#thiscompilation","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"初始化 compilation 时调用，在触发 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation")," 事件之前调用。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"compilationParams"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"compilation",parentName:"h3"}),"compilation",(0,t.kt)("a",{href:"#compilation","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"compilation 创建之后执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"compilationParams"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"make",parentName:"h3"}),"make",(0,t.kt)("a",{href:"#make","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncParallelHook")),(0,t.kt)("p",null,"compilation 结束之前执行。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"aftercompile",parentName:"h3"}),"afterCompile",(0,t.kt)("a",{href:"#aftercompile","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"compilation 结束和封印之后执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"shouldemit",parentName:"h3"}),"shouldEmit",(0,t.kt)("a",{href:"#shouldemit","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在输出 asset 之前调用。返回一个布尔值，告知是否输出。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"shouldEmit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 返回 true 以输出 output 结果，否则返回 false"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"emit",parentName:"h3"}),"emit",(0,t.kt)("a",{href:"#emit","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"输出 asset 到 output 目录之前执行。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteremit",parentName:"h3"}),"afterEmit",(0,t.kt)("a",{href:"#afteremit","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"输出 asset 到 output 目录之后执行。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"assetemitted",parentName:"h3"}),"assetEmitted",(0,t.kt)("a",{href:"#assetemitted","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在 asset 被输出时执行。此钩子可以访问被输出的 asset 的相关信息，例如它的输出路径和字节内容。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"file"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"info"))),(0,t.kt)("p",null,"例如，可以通过 ",(0,t.kt)("inlineCode",{parentName:"p"},"info.content")," 访问 asset 的内容 buffer："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"assetEmitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"file",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"{")," content",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," source",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," outputPath",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," targetPath ",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"content",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// <Buffer 66 6f 6f 62 61 72>"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"done",parentName:"h3"}),"done",(0,t.kt)("a",{href:"#done","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在 compilation 完成时执行。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"stats"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"additionalPass",parentName:"h3"}),"additionalPass",(0,t.kt)("a",{href:"#additionalPass","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"This hook allows you to do a one more additional pass of the build."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"failed",parentName:"h3"}),"failed",(0,t.kt)("a",{href:"#failed","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 compilation 失败时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"error"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"invalid",parentName:"h3"}),"invalid",(0,t.kt)("a",{href:"#invalid","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在一个观察中的 compilation 无效时执行。这个钩子 ",(0,t.kt)("em",{parentName:"p"},"不会")," 被复制到子编译器。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"fileName"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"changeTime"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"watchclose",parentName:"h3"}),"watchClose",(0,t.kt)("a",{href:"#watchclose","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在一个观察中的 compilation 停止时执行。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"shutdown",parentName:"h3"}),"shutdown",(0,t.kt)("a",{href:"#shutdown","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"当编译器关闭时调用。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"infrastructureLog",parentName:"h3"}),"infrastructureLog",(0,t.kt)("a",{href:"#infrastructureLog","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在配置中启用 ",(0,t.kt)("a",{href:"/configuration/other-options/#infrastructurelogging",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"infrastructureLogging")," 选项")," 后，允许使用 infrastructure log(基础日志)。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"name"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"type"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"args"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"log",parentName:"h3"}),"log",(0,t.kt)("a",{href:"#log","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"启用后允许记录到 ",(0,t.kt)("a",{href:"/configuration/stats/",parentName:"p"},"stats")," 对象，请参阅 ",(0,t.kt)("a",{href:"/configuration/stats/#stats-options",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"stats.logging"),", ",(0,t.kt)("inlineCode",{parentName:"a"},"stats.loggingDebug")," 和 ",(0,t.kt)("inlineCode",{parentName:"a"},"stats.loggingTrace")," 选项"),"。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"origin"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"logEntry"))))}l.isMDXComponent=!0,a.default=l}}]);