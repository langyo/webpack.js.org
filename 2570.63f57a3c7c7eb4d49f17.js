"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2570],{2570:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"本指南继续沿用 ",(0,t.kt)("a",{href:"/guides/getting-started",parentName:"p"},"起步"),"、",(0,t.kt)("a",{href:"/guides/output-management",parentName:"p"},"管理输出")," 和 ",(0,t.kt)("a",{href:"/guides/code-splitting",parentName:"p"},"代码分离")," 中的代码示例。")),(0,t.kt)("p",null,"接下来继续使用 webpack 打包模块化应用程序。webpack 会在打包后生成可部署的 ",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 目录，并将打包后的内容放在此目录。一旦 ",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 目录中的内容部署到服务器上，客户端（通常是浏览器）就能够访问此服务器以获取站点及其资源。由于获取服务器资源是比较耗费时间的操作，因此浏览器使用了一种名为 ",(0,t.kt)("a",{href:"https://en.wikipedia.org/wiki/Cache_(computing)",parentName:"p"},"缓存")," 的技术。命中缓存可以降低网络流量，使网站加载速度更快。然而，如果在部署资源的最新版本时没有更改资源的文件名，浏览器可能会认为它没有被更新，从而使用它的缓存版本。由于缓存的存在，当需要获取新的代码时，就会显得很棘手。"),(0,t.kt)("p",null,"这篇指南的重点在于通过必要配置确保 webpack 编译生成的文件能够被客户端缓存；当文件内容变化后，客户端又能够请求到新的文件。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"output-filenames",parentName:"h2"}),"输出文件的文件名",(0,t.kt)("a",{href:"#output-filenames","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"更改 ",(0,t.kt)("inlineCode",{parentName:"p"},"output.filename")," 中的 ",(0,t.kt)("a",{href:"/configuration/output/#outputfilename",parentName:"p"},"substitutions")," 以定义输出文件的名称。webpack 提供了一种称为 ",(0,t.kt)("strong",{parentName:"p"},"可替换模板字符串（substitution）")," 的方式，通过带括号字符串来模板化文件名。其中，",(0,t.kt)("inlineCode",{parentName:"p"},"[contenthash]")," 将根据资源内容创建唯一哈希值。当资源内容发生变化时，",(0,t.kt)("inlineCode",{parentName:"p"},"[contenthash]")," 也会发生变化。"),(0,t.kt)("p",null,"这里使用 ",(0,t.kt)("a",{href:"/guides/getting-started",parentName:"p"},"起步")," 中的示例和 ",(0,t.kt)("a",{href:"/guides/output-management",parentName:"p"},"管理输出")," 中的 ",(0,t.kt)("inlineCode",{parentName:"p"},"plugins")," 插件作为项目基础，所以不必手动维护 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n|- /src\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- index.js\n")),"|- /node_modules")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const path = require('path');\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   entry: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     new HtmlWebpackPlugin({\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       title: 'Output Management',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       title: 'Caching',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ],\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   output: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: 'bundle.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: '[name].[contenthash].js',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     clean: true,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,"调整配置后构建脚本，将会看到像下面一样的输出："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                       Asset       Size  Chunks                    Chunk Names\nmain.7e2c49a622975ebd9b7e.js     ",(0,t.kt)("span",{className:"token number",parentName:"code"},"544")," kB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"big",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\n                  index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"197")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"可以发现 bundle 的名称是其内容通过哈希的映射。也许会认为，如果不修改原始文件直接再次运行构建，文件名将保持不变。然而事实并非如此，试试再次构建脚本："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                       Asset       Size  Chunks                    Chunk Names\nmain.205199ab45963f6a62ec.js     ",(0,t.kt)("span",{className:"token number",parentName:"code"},"544")," kB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"big",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\n                  index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"197")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"再次执行构建后发现，尽管没有修改原始文件，bundle 的名称仍然发生了修改。这是因为 webpack 在入口 chunk 中包含了某些引导模板（boilerplate），特别是 runtime 和 manifest。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"输出可能会因当前的 webpack 版本而稍有差异。与旧版本相比，新版本未必持有同样的哈希机制，但我们仍然建议采取以下步骤以确保安全。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"extracting-boilerplate",parentName:"h2"}),"提取引导模板",(0,t.kt)("a",{href:"#extracting-boilerplate","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"正如在 ",(0,t.kt)("a",{href:"/guides/code-splitting",parentName:"p"},"代码分离")," 中所学到的，",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"SplitChunksPlugin"))," 插件可以用于将模块分离到单独的 bundle 中。webpack 还提供了一个优化功能，可以使用 ",(0,t.kt)("a",{href:"/configuration/optimization/#optimizationruntimechunk",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.runtimeChunk"))," 选项将 runtime 代码拆分为一个单独的 chunk。将其设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"single")," 以便为所有 chunk 创建一个 runtime bundle："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const path = require('path');\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   entry: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     new HtmlWebpackPlugin({\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     title: 'Caching',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ],\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: '[name].[contenthash].js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     clean: true,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   optimization: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     runtimeChunk: 'single',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,"更改配置后再次构建，查看提取出来的 ",(0,t.kt)("inlineCode",{parentName:"p"},"runtime")," bundle："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},"Hash: 82c9c385607b2150fab2\nVersion: webpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"4.12"),".0\nTime: 3027ms\n                          Asset       Size  Chunks             Chunk Names\nruntime.cc17ae2a94ec771e9221.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.42")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  runtime\n   main.e81de2cf758ada72f306.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.5")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\n                     index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"275")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"/buildin/module.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"497")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"/buildin/global.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"489")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token number",parentName:"code"},"3"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"309")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n    + ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1")," hidden module")),(0,t.kt)("p",null,"由于像 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash")," 或 ",(0,t.kt)("inlineCode",{parentName:"p"},"react")," 这样的第三方库很少像本地源代码一样频繁修改，因此通常推荐将第三方库提取到单独的 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," chunk 中。这一步将减少客户端对服务器的请求，同时保证自身代码与服务器一致。可以通过使用 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/#split-chunks-example-2",parentName:"p"},"SplitChunksPlugin 示例 2")," 中演示的 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"SplitChunksPlugin"))," 插件的 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/#splitchunkscachegroups",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"cacheGroups"))," 选项来实现。试试在 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks")," 添加如下 ",(0,t.kt)("inlineCode",{parentName:"p"},"cacheGroups")," 参数并执行构建："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const path = require('path');\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   entry: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     new HtmlWebpackPlugin({\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     title: 'Caching',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ],\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: '[name].[contenthash].js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     clean: true,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   optimization: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     runtimeChunk: 'single',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     splitChunks: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       cacheGroups: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         vendor: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"           test: /[\\\\/]node_modules[\\\\/]/,\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"           name: 'vendors',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"           chunks: 'all',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,"再次构建，然后查看新的 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," bundle："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                          Asset       Size  Chunks             Chunk Names\nruntime.cc17ae2a94ec771e9221.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.42")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  runtime\nvendors.a42c3ca0d742766d7a28.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.4")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  vendors\n   main.abf44fedb7d11d4312d7.js  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"240")," bytes       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\n                     index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"353")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"现在，可以看到 ",(0,t.kt)("inlineCode",{parentName:"p"},"main")," 不再含有来自 ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules")," 目录的 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," 代码，并且体积减少到 ",(0,t.kt)("inlineCode",{parentName:"p"},"240 bytes"),"！"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"module-identifiers",parentName:"h2"}),"模块标识符",(0,t.kt)("a",{href:"#module-identifiers","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在项目中再添加一个模块 ",(0,t.kt)("inlineCode",{parentName:"p"},"print.js"),"："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n|- /src\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- index.js\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- print.js\n")),"|- /node_modules")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"print.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," export default function print(text) {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   console.log(text);\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," import _ from 'lodash';\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," import Print from './print';\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," function component() {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const element = document.createElement('div');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // lodash 现在使用 import 引入\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.onclick = Print.bind(null, 'Hello webpack!');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   return element;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," document.body.appendChild(component());")))),(0,t.kt)("p",null,"通常我们会期望，当再次执行构建后，只有 ",(0,t.kt)("inlineCode",{parentName:"p"},"main")," bundle 的哈希值会发生变化，然而……"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                           Asset       Size  Chunks                    Chunk Names\n  runtime.1400d5af64fc1b7b3a45.js    ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.85")," kB      ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"         runtime\n  vendor.a7561fb0e9a071baadb9.js     ",(0,t.kt)("span",{className:"token number",parentName:"code"},"541")," kB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"big",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  vendor\n    main.b746e3eb72875af2caa9.js    ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.22")," kB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"         main\n                      index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"352")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"可以发现，三个文件的哈希值都发生了变化。这是因为每个 ",(0,t.kt)("a",{href:"/api/module-variables/#moduleid-commonjs",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"module.id"))," 会默认基于解析顺序增加。换言之，当解析顺序发生变化，ID 也会随之改变。简要概括便是："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"main")," bundle 会随着自身的新增内容的修改而发生变化。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"vendor")," bundle 会随着自身的 ",(0,t.kt)("inlineCode",{parentName:"li"},"module.id")," 的变化而发生变化。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"manifest")," runtime 会因为现在包含一个新模块的引用而发生变化。")),(0,t.kt)("p",null,"上面的第一点与最后一点都是符合预期的行为，而 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," 的哈希值发生变化是我们要修复的。试试将 ",(0,t.kt)("a",{href:"/configuration/optimization/#optimizationmoduleids",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.moduleIds"))," 设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"'deterministic'"),"："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const path = require('path');\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   entry: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     new HtmlWebpackPlugin({\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       title: 'Caching',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ],\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: '[name].[contenthash].js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     clean: true,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   optimization: {\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     moduleIds: 'deterministic',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     runtimeChunk: 'single',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     splitChunks: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       cacheGroups: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"         vendor: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"           test: /[\\\\/]node_modules[\\\\/]/,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"           name: 'vendors',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"           chunks: 'all',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"         },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,"现在，不论是否添加任何新的本地依赖，对于前后两次构建，",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," 的哈希值都应保持一致："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                          Asset       Size  Chunks             Chunk Names\n   main.216e852f60c8829c2289.js  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"340")," bytes       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\nvendors.55e79e5927a639d21a1b.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.5")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  vendors\nruntime.725a1a51ede5ae0cfde0.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.42")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  runtime\n                     index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"353")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nEntrypoint main ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," runtime.725a1a51ede5ae0cfde0.js vendors.55e79e5927a639d21a1b.js main.216e852f60c8829c2289.js\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"接下来修改 ",(0,t.kt)("inlineCode",{parentName:"p"},"src/index.js")," 临时移除额外的依赖："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," import _ from 'lodash';\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," import Print from './print';\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," // import Print from './print';\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," function component() {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const element = document.createElement('div');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // lodash 现在使用 import 引入\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.onclick = Print.bind(null, 'Hello webpack!');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // element.onclick = Print.bind(null, 'Hello webpack!');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   return element;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," document.body.appendChild(component());")))),(0,t.kt)("p",null,"最后，再次执行构建："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n                          Asset       Size  Chunks             Chunk Names\n   main.ad717f2466ce655fff5c.js  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"274")," bytes       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  main\nvendors.55e79e5927a639d21a1b.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.5")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  vendors\nruntime.725a1a51ede5ae0cfde0.js   ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.42")," KiB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  runtime\n                     index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"353")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nEntrypoint main ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," runtime.725a1a51ede5ae0cfde0.js vendors.55e79e5927a639d21a1b.js main.ad717f2466ce655fff5c.js\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("p",null,"可以看到，在这两次构建中，",(0,t.kt)("inlineCode",{parentName:"p"},"vendor")," bundle 的文件名称都是 ",(0,t.kt)("inlineCode",{parentName:"p"},"55e79e5927a639d21a1b"),"。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"conclusion",parentName:"h2"}),"总结",(0,t.kt)("a",{href:"#conclusion","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"缓存可能很复杂，但是从应用程序或站点用户可以获得的收益来看，这值得付出努力。想要了解更多信息，请查看下面 ",(0,t.kt)("strong",{parentName:"p"},"延伸阅读")," 部分。"))}p.isMDXComponent=!0,a.default=p}}]);