"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3807],{3807:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("p",null,"以下各节描述从 webpack 1 到 webpack 2 的重大变化。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"注意：webpack 从 1 到 2 的变化，比从 2 到 3 要少很多，所以版本迁移起来难度应该不大。如果你遇到了问题，请查看",(0,t.kt)("a",{href:"https://github.com/webpack/webpack/releases",parentName:"p"},"更新日志")," 以了解更多细节。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"resolveroot-resolvefallback-resolvemodulesdirectories",parentName:"h2"}),"resolve.root, resolve.fallback, resolve.modulesDirectories",(0,t.kt)("a",{href:"#resolveroot-resolvefallback-resolvemodulesdirectories","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"这些选项被一个单独的选项 ",(0,t.kt)("inlineCode",{parentName:"p"},"resolve.modules")," 取代。更多用法请查看 ",(0,t.kt)("a",{href:"/configuration/resolve",parentName:"p"},"resolving")," 。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," resolve: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'   root: path.join(__dirname, "src")\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   modules: [\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'     path.join(__dirname, "src"),\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'     "node_modules"\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"resolveextensions",parentName:"h2"}),"resolve.extensions",(0,t.kt)("a",{href:"#resolveextensions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"此选项不再需要传一个空字符串。此行为被迁移到 ",(0,t.kt)("inlineCode",{parentName:"p"},"resolve.enforceExtension")," 。更多用法请查看 ",(0,t.kt)("a",{href:"/configuration/resolve",parentName:"p"},"解析")," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"resolve",parentName:"h2"}),"resolve.*",(0,t.kt)("a",{href:"#resolve","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"这里更改了几个 API 。由于不常用，不在这里详细列出。更多用法请查看 ",(0,t.kt)("a",{href:"/configuration/resolve",parentName:"p"},"解析")," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"moduleloaders-is-now-modulerules",parentName:"h2"}),"module.loaders is now module.rules",(0,t.kt)("a",{href:"#moduleloaders-is-now-modulerules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"旧的 loader 配置被更强大的 rules 系统取代，后者允许配置 loader 以及其他更多选项。\n为了兼容旧版，",(0,t.kt)("inlineCode",{parentName:"p"},"module.loaders")," 语法仍然有效，旧的属性名依然可以被解析。\n新的命名约定更易于理解，并且是升级配置使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"module.rules")," 的好理由。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   loaders: [\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       test: /\\.css$/,\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       loaders: [\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "style-loader",\n'),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "css-loader?modules=true"\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       use: [\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'           loader: "style-loader"\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'           loader: "css-loader",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"           options: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"             modules: true\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"           }\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"         }\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       test: /\\.jsx$/,\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},'       loader: "babel-loader", // 在这里不要使用 "use"\n'),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       options: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"         // ...\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"chaining-loaders",parentName:"h2"}),"链式 loaders",(0,t.kt)("a",{href:"#chaining-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"就像在 webpack 1 中，loader 可以链式调用，上一个 loader 的输出被作为输入传给下一个 loader。\n使用 ",(0,t.kt)("a",{href:"/configuration/module/#ruleuse",parentName:"p"},"rule.use")," 配置选项，",(0,t.kt)("inlineCode",{parentName:"p"},"use")," 可以设置为一个 loader 数组。\n在 webpack 1 中，loader 通常被用 ",(0,t.kt)("inlineCode",{parentName:"p"},"!")," 连写。这一写法在 webpack 2 中只在使用旧的选项 ",(0,t.kt)("inlineCode",{parentName:"p"},"module.loaders")," 时才有效。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   loaders: [{\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [{\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     test: /\\.less$/,\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'     loader: "style-loader!css-loader!less-loader"\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     use: [\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       "style-loader",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       "css-loader",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       "less-loader"\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     ]\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   }]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"automatic--loader-module-name-extension-removed",parentName:"h2"}),"已移除 ",(0,t.kt)("inlineCode",{parentName:"h2"},"-loader")," 模块名称自动扩展",(0,t.kt)("a",{href:"#automatic--loader-module-name-extension-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在引用 loader 时，不能再省略 ",(0,t.kt)("inlineCode",{parentName:"p"},"-loader")," 后缀了:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       use: [\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "style",\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "style-loader",\n')),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "css",\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "css-loader",\n')),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "less",\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'         "less-loader",\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("p",null,"你仍然可以通过配置 ",(0,t.kt)("inlineCode",{parentName:"p"},"resolveLoader.moduleExtensions")," 配置选项，启用这一旧有行为，但是我们不推荐这么做。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," resolveLoader: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'   moduleExtensions: ["-loader"]\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("p",null,"了解这一改变背后的原因，请查看 ",(0,t.kt)("a",{href:"https://github.com/webpack/webpack/issues/2986",parentName:"p"},"#2986")," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"json-loader-is-not-required-anymore",parentName:"h2"}),"json-loader 不再需要手动添加",(0,t.kt)("a",{href:"#json-loader-is-not-required-anymore","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"如果没有为 JSON 文件配置 loader，webpack 将自动尝试通过 [",(0,t.kt)("inlineCode",{parentName:"p"},"json-loader"),"]\n(",(0,t.kt)("a",{href:"https://github.com/webpack-contrib/json-loader",parentName:"p"},"https://github.com/webpack-contrib/json-loader"),") 加载 JSON 文件。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       test: /\\.json/,\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       loader: "json-loader"\n'),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("p",null,(0,t.kt)("a",{href:"https://github.com/webpack/webpack/issues/3363",parentName:"p"},"我们决定这样做"),"\n是为了消除 webpack、 node.js 和 browserify 之间的环境差异。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"loaders-in-configuration-resolve-relative-to-context",parentName:"h2"}),"配置中的 loader 默认相对于 context 进行解析",(0,t.kt)("a",{href:"#loaders-in-configuration-resolve-relative-to-context","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在 ",(0,t.kt)("strong",{parentName:"p"},"webpack 1")," 中，默认配置下 loader 解析相对于被匹配的文件。然而，在 ",(0,t.kt)("strong",{parentName:"p"},"webpack 2")," 中，默认配置下 loader 解析相对于 ",(0,t.kt)("inlineCode",{parentName:"p"},"context")," 选项。"),(0,t.kt)("p",null,"这解决了「在使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm link")," 或引用 ",(0,t.kt)("inlineCode",{parentName:"p"},"context")," 上下文目录之外的模块时，loader 所导致的模块重复载入」的问题。"),(0,t.kt)("p",null,"你可以移除掉那些为解决此问题的 hack 方案了："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       // ...\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       loader: require.resolve("my-loader")\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       loader: "my-loader"\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," resolveLoader: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'   root: path.resolve(__dirname, "node_modules")\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"modulepreloaders-and-modulepostloaders-were-removed",parentName:"h2"}),"module.preLoaders and module.postLoaders were removed:",(0,t.kt)("a",{href:"#modulepreloaders-and-modulepostloaders-were-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   preLoaders: [\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"       test: /\\.js$/,\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'       enforce: "pre",\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},'       loader: "eslint-loader"\n'),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"uglifyjsplugin-sourcemap",parentName:"h2"}),"UglifyJsPlugin sourceMap",(0,t.kt)("a",{href:"#uglifyjsplugin-sourcemap","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"UglifyJsPlugin")," 的 ",(0,t.kt)("inlineCode",{parentName:"p"},"sourceMap")," 选项现在默认为 ",(0,t.kt)("inlineCode",{parentName:"p"},"false")," 而不是 ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"。这意味着如果你在压缩代码时启用了 ",(0,t.kt)("inlineCode",{parentName:"p"},"source map"),"，或者想要让 ",(0,t.kt)("inlineCode",{parentName:"p"},"uglifyjs")," 的警告能够对应到正确的代码行，你需要将 ",(0,t.kt)("inlineCode",{parentName:"p"},"UglifyJsPlugin")," 的 ",(0,t.kt)("inlineCode",{parentName:"p"},"sourceMap")," 设为 ",(0,t.kt)("inlineCode",{parentName:"p"},"true")," 。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},' devtool: "source-map",\n'),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new UglifyJsPlugin({\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     sourceMap: true\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   })\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"uglifyjsplugin-warnings",parentName:"h2"}),"UglifyJsPlugin warnings",(0,t.kt)("a",{href:"#uglifyjsplugin-warnings","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},' devtool: "source-map",\n'),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new UglifyJsPlugin({\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     compress: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       warnings: true\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   })\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"uglifyjsplugin-minimize-loaders",parentName:"h2"}),"UglifyJsPlugin minimize loaders",(0,t.kt)("a",{href:"#uglifyjsplugin-minimize-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"UglifyJsPlugin")," 不再压缩 loaders。在未来很长一段时间里，需要通过设置 ",(0,t.kt)("inlineCode",{parentName:"p"},"minimize:true")," 来压缩 loaders。参考 loader 文档里的相关选项。"),(0,t.kt)("p",null,"loaders 的压缩模式将在 webpack 3 或后续版本中取消。"),(0,t.kt)("p",null,"为了兼容旧的 loaders，loaders 可以通过插件来切换到压缩模式："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     minimize: true\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   })\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"dedupeplugin-has-been-removed",parentName:"h2"}),"DedupePlugin has been removed",(0,t.kt)("a",{href:"#dedupeplugin-has-been-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"不再需要 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpack.optimize.DedupePlugin"),"。请从配置中移除。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"bannerplugin---breaking-change",parentName:"h2"}),"BannerPlugin - 破坏性改动",(0,t.kt)("a",{href:"#bannerplugin---breaking-change","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"BannerPlugin")," 不再接受两个参数，而是只接受单独的 options 对象。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    new webpack.BannerPlugin('Banner', {raw: true, entryOnly: true});\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    new webpack.BannerPlugin({banner: 'Banner', raw: true, entryOnly: true});\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"occurrenceorderplugin-is-now-on-by-default",parentName:"h2"}),"默认加载 OccurrenceOrderPlugin",(0,t.kt)("a",{href:"#occurrenceorderplugin-is-now-on-by-default","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"OccurrenceOrderPlugin")," 现在默认启用，并已重命名(在 webpack 1 中为 ",(0,t.kt)("inlineCode",{parentName:"p"},"OccurenceOrderPlugin"),") 。\n因此，请确保从你的配置中删除该插件："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // webpack 1\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new webpack.optimize.OccurenceOrderPlugin()\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // webpack 2\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new webpack.optimize.OccurrenceOrderPlugin()\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"extracttextwebpackplugin---breaking-change",parentName:"h2"}),"ExtractTextWebpackPlugin - 破坏性改动",(0,t.kt)("a",{href:"#extracttextwebpackplugin---breaking-change","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("a",{href:"https://github.com/webpack-contrib/extract-text-webpack-plugin",parentName:"p"},"ExtractTextPlugin")," 需要使用版本 2，才能在 webpack 2 下正常运行 。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm install --save-dev extract-text-webpack-plugin")),(0,t.kt)("p",null,"这一插件的配置变化主要体现在语法上。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"extracttextpluginextract",parentName:"h3"}),"ExtractTextPlugin.extract",(0,t.kt)("a",{href:"#extracttextpluginextract","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"module: {\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," rules: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     test: /.css$/,\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'      loader: ExtractTextPlugin.extract("style-loader", "css-loader", { publicPath: "/dist" })\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      use: ExtractTextPlugin.extract({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'        fallback: "style-loader",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'        use: "css-loader",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'        publicPath: "/dist"\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      })\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]\n")),"}")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"new-extracttextpluginoptions",parentName:"h3"}),(0,t.kt)("inlineCode",{parentName:"h3"},"new ExtractTextPlugin({options})"),(0,t.kt)("a",{href:"#new-extracttextpluginoptions","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"plugins: [\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'  new ExtractTextPlugin("bundle.css", { allChunks: true, disable: false })\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  new ExtractTextPlugin({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'    filename: "bundle.css",\n'),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    disable: false,\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    allChunks: true\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  })\n")),"]")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"full-dynamic-requires-now-fail-by-default",parentName:"h2"}),"全动态 require 现在默认会失败",(0,t.kt)("a",{href:"#full-dynamic-requires-now-fail-by-default","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"只有一个表达式的依赖（例如 ",(0,t.kt)("inlineCode",{parentName:"p"},"require(expr)"),"）将创建一个空的 context 而不是一个完整目录的 context。"),(0,t.kt)("p",null,"这样的代码应该进行重构，因为它不能与 ES2015 模块一起使用。如果你确定不会有 ES2015 模块，你可以使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"ContextReplacementPlugin")," 来指示 compiler 进行正确的解析。"),(0,t.kt)("aside",{className:"todo"},(0,t.kt)("h6",{className:"todo__prefix",parentName:"aside"},"TODO"),(0,t.kt)("p",{parentName:"aside"},"Link to an article about dynamic dependencies.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"using-custom-arguments-in-cli-and-configuration",parentName:"h3"}),"在 CLI 和配置中使用自定义参数",(0,t.kt)("a",{href:"#using-custom-arguments-in-cli-and-configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"如果你之前滥用 CLI 来传自定义参数到配置中，比如："),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webpack --custom-stuff")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// webpack.config.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," customStuff ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," process",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"argv",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"indexOf"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'--custom-stuff'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},">=")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," config",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"你将会发现新版中不再允许这么做。CLI 现在更加严格了。"),(0,t.kt)("p",null,"替代地，现在提供了一个接口来传递参数给配置。我们应该采用这种新方式，在未来许多工具将可能依赖于此。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webpack --env.customStuff")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"env"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," customStuff ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," env",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"customStuff",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," config",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"详见 ",(0,t.kt)("a",{href:"/api/cli",parentName:"p"},"CLI")," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"requireensure-and-amd-require-are-asynchronous",parentName:"h2"}),"require.ensure and AMD require are asynchronous",(0,t.kt)("a",{href:"#requireensure-and-amd-require-are-asynchronous","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"现在这些函数总是异步的，而不是当 chunk 已经加载完成的时候同步调用它们的回调函数 (callback) 。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"require.ensure")," 现在依赖原生的 ",(0,t.kt)("inlineCode",{parentName:"strong"},"Promise"),"s 。如果不支持 Promise 的环境中使用 ",(0,t.kt)("inlineCode",{parentName:"strong"},"require.ensure")," ，你需要添加 polyfill.")," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"loader-configuration-is-through-options",parentName:"h2"}),"通过 ",(0,t.kt)("inlineCode",{parentName:"h2"},"options")," 中配置 loader",(0,t.kt)("a",{href:"#loader-configuration-is-through-options","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"你 ",(0,t.kt)("em",{parentName:"p"},"不能再")," 通过 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpack.config.js")," 的自定义属性来配置 loader 。只能通过 ",(0,t.kt)("inlineCode",{parentName:"p"},"options")," 来配置。下面配置的 ",(0,t.kt)("inlineCode",{parentName:"p"},"ts")," 属性在 webpack 2 下不再有效："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'ts-loader'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 在 webpack 2 中无效"),"\n  ts",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"what-are-options",parentName:"h3"}),"什么是 ",(0,t.kt)("inlineCode",{parentName:"h3"},"options")," ？",(0,t.kt)("a",{href:"#what-are-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"好问题。严格来说，有两种办法，都可以用来配置 webpack 的 loader。典型的 ",(0,t.kt)("inlineCode",{parentName:"p"},"options")," 被称为 ",(0,t.kt)("inlineCode",{parentName:"p"},"query"),"，是一个可以被添加到 loader 名之后的字符串。它比较像一个查询字符串(query string)，但是实际上有",(0,t.kt)("a",{href:"https://github.com/webpack/loader-utils#parsequery",parentName:"p"},"更强大的能力"),"："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'ts-loader?'")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"+")," ",(0,t.kt)("span",{className:"token constant",parentName:"code"},"JSON"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"stringify"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"不过它也可以分开来，写成一个单独的对象，紧跟在 loader 属性后面："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'ts-loader'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        options",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"loaderoptionsplugin-context",parentName:"h2"}),"LoaderOptionsPlugin context",(0,t.kt)("a",{href:"#loaderoptionsplugin-context","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"有的 loader 需要从配置中读取一些 context 信息。在未来很长一段时间里，这将需要通过 loader options 传入。详见 loader 文档的相关选项。"),(0,t.kt)("p",null,"为了保持对旧 loaders 的兼容，这些信息可以通过插件传进来："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     options: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       context: __dirname\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     }\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   })\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"debug",parentName:"h2"}),"debug",(0,t.kt)("a",{href:"#debug","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在 webpack 1 中 ",(0,t.kt)("inlineCode",{parentName:"p"},"debug")," 选项可以将 loader 切换到调试模式 (debug mode) 。在未来很长一段时间里，这将需要通过 loader 选项传递。详见 loader 文档的相关选项。"),(0,t.kt)("p",null,"loaders 的调试模式将在 webpack 3 或后续版本中取消。"),(0,t.kt)("p",null,"为了保持对旧 loaders 的兼容，loader 可以通过插件来切换到调试模式："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," debug: true,\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     debug: true\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   })\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," ]")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"code-splitting-with-es2015",parentName:"h2"}),"ES2015 的代码分离",(0,t.kt)("a",{href:"#code-splitting-with-es2015","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在 webpack 1 中，可以使用 ",(0,t.kt)("a",{href:"/api/module-methods/#requireensure",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"require.ensure()"))," 作为实现应用程序的懒加载 chunks 的一种方法："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"ensure"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," foo ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"ES2015 模块加载规范定义了 ",(0,t.kt)("a",{href:"/api/module-methods/#import",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"import()"))," 方法，可以在运行时 (runtime) 动态地加载 ES2015 模块。webpack 将 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 作为分割点 (split-point) 并将所要请求的模块 (requested module) 放置到一个单独的 chunk 中。",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 接收模块名作为参数，并返回一个 Promise 。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"onClick"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"default",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"catch"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"err"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Chunk loading failed'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("p",null,"好消息是：如果加载 chunk 失败，我们现在可以进行处理，因为现在它基于 ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise"),"。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"dynamic-expressions",parentName:"h2"}),"动态表达式",(0,t.kt)("a",{href:"#dynamic-expressions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"可以传递部分表达式给 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 。这与 CommonJS 对表达式的处理方式一致（webpack 为所有可能匹配的文件创建 context](/plugins/context-replacement-plugin/)) ）。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 为每一个可能的模块创建独立的 chunk。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"route"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"path",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," query"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"./routes/"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"/route"),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"route"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"route",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"Route"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"query",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 上面代码为每个可能的路由创建独立的 chunk"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"mixing-es2015-with-amd-and-commonjs",parentName:"h2"}),"混合使用 ES2015、AMD 和 CommonJS",(0,t.kt)("a",{href:"#mixing-es2015-with-amd-and-commonjs","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"你可以自由混合使用三种模块类型（甚至在同一个文件中）。在这个情况中 webpack 的行为和 babel 以及 node-eps 一致："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// CommonJS 调用 ES2015 模块"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," book ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./book'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nbook",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"currentPage",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nbook",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"readPage"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nbook",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"default ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'This is a book'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ES2015 模块调用 CommonJS"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," fs ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'fs'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// module.exports 映射到 default"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," readFileSync ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'fs'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 从返回对象(returned object+)中读取命名的导出方法(named exports)"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"typeof")," fs",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"readFileSync ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'function'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"typeof")," readFileSync ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'function'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"值得注意的是，你需要让 Babel 不解析这些模块符号，从而让 webpack 可以使用它们。你可以通过设置如下配置到 .babelrc 或 babel-loader 来实现这一点。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},".babelrc")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-json",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token property",parentName:"code"},'"presets"'),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},'"es2015"'),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,t.kt)("span",{className:"token property",parentName:"code"},'"modules"'),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"hints",parentName:"h2"}),"Hints",(0,t.kt)("a",{href:"#hints","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"不需要改变什么，但有机会改变。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"template-strings",parentName:"h3"}),"模版字符串",(0,t.kt)("a",{href:"#template-strings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack 现在支持表达式中的模板字符串了。这意味着你可以在 webpack 构建中使用它们："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},' require("./templates/" + name);\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," require(`./templates/${name}`);")))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"configuration-promise",parentName:"h3"}),"配置中使用 Promise",(0,t.kt)("a",{href:"#configuration-promise","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack 现在支持在配置文件中返回 ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise")," 了。这让你能在配置文件中做异步处理。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"fetchLangs"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"lang"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    entry",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'...'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n    plugins",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"DefinePlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,t.kt)("span",{className:"token constant",parentName:"code"},"LANGUAGE"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," lang ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"advanced-loader-matching",parentName:"h3"}),"高级 loader 匹配",(0,t.kt)("a",{href:"#advanced-loader-matching","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack 现在支持对 loader 进行更多方式的匹配。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        resource",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/filename/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// 匹配 "/path/filename.js"'),"\n        resourceQuery",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/^\\?querystring$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// 匹配 "?querystring"'),"\n        issuer",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/filename/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// 如果请求 "/path/filename.js" 则匹配 "/path/something.js"'),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"more-cli-options",parentName:"h3"}),"更多的 CLI 参数项",(0,t.kt)("a",{href:"#more-cli-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"你可以使用一些新的 CLI 参数项："),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},'--define process.env.NODE_ENV="production"')," 见 ",(0,t.kt)("a",{href:"/plugins/define-plugin/",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"DefinePlugin"))," 。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"--display-depth")," 显示每个模块到入口的距离。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"--display-used-exports")," 显示一个模块中被使用的 exports 信息。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"--display-max-modules")," 设置输出时显示的模块数量（默认是 15）。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"-p")," 能够定义",(0,t.kt)("inlineCode",{parentName:"p"},"process.env.NODE_ENV")," 为 ",(0,t.kt)("inlineCode",{parentName:"p"},'"production"')," 。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"loader-changes",parentName:"h2"}),"Loader 变更",(0,t.kt)("a",{href:"#loader-changes","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"以下变更仅影响 loader 的开发者。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"cacheable",parentName:"h3"}),"Cacheable",(0,t.kt)("a",{href:"#cacheable","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Loaders 现在默认可被缓存。Loaders 如果不想被缓存，需要选择不被缓存。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," // 缓存 loader\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = function(source) {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   this.cacheable();\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   return source;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," // 不缓存 loader\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = function(source) {\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   this.cacheable(false);\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   return source;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }")))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"complex-options",parentName:"h3"}),"复杂 options",(0,t.kt)("a",{href:"#complex-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack 1")," 只支持能够「可 ",(0,t.kt)("inlineCode",{parentName:"p"},"JSON.stringify")," 的对象」作为 loader 的 options。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack 2")," 现在支持任意 JS 对象作为 loader 的 options。"),(0,t.kt)("p",null,"webpack ",(0,t.kt)("a",{href:"https://github.com/webpack/webpack/releases/tag/v2.2.1",parentName:"p"},"2.2.1")," 之前（即从 2.0.0 到 2.2.0），使用复合 ",(0,t.kt)("inlineCode",{parentName:"p"},"options")," ，需要在 ",(0,t.kt)("inlineCode",{parentName:"p"},"options")," 对象上添加 ",(0,t.kt)("inlineCode",{parentName:"p"},"ident"),"，允许它能够被其他 loader 引用。这 ",(0,t.kt)("strong",{parentName:"p"},"在 2.2.1 中被删除")," ，因此目前的迁移不再需要使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"ident")," 键。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"{\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," test: /\\.ext/\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," use: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   loader: '...',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   options: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     ident: 'id',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     fn: () => require('./foo.js')\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   }\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }\n")),"}")))}p.isMDXComponent=!0,a.default=p}}]);