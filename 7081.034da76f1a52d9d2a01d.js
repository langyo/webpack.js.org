"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7081],{7081:function(e,a,t){t.r(a),t(7378);var n=t(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},p.apply(this,arguments)}function s(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",p({components:a},t),(0,n.kt)("p",null,"本质上，",(0,n.kt)("strong",{parentName:"p"},"webpack")," 是一个用于现代 JavaScript 应用程序的 ",(0,n.kt)("em",{parentName:"p"},"静态模块打包工具"),"。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 ",(0,n.kt)("a",{href:"/concepts/dependency-graph/",parentName:"p"},"依赖图(dependency graph)"),"，然后将你项目中所需的每一个模块组合成一个或多个 ",(0,n.kt)("em",{parentName:"p"},"bundles"),"，它们均为静态资源，用于展示你的内容。"),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},"可以在 ",(0,n.kt)("a",{href:"/concepts/modules",parentName:"p"},"这里")," 了解更多关于 JavaScript 模块和 webpack 模块的信息。")),(0,n.kt)("p",null,"从 v4.0.0 开始，",(0,n.kt)("strong",{parentName:"p"},"webpack 可以不用再引入一个配置文件"),"来打包项目，然而，它仍然有着 ",(0,n.kt)("a",{href:"/configuration",parentName:"p"},"高度可配置性"),"，可以很好满足你的需求。"),(0,n.kt)("p",null,"在开始前你需要先理解一些",(0,n.kt)("strong",{parentName:"p"},"核心概念"),"："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#entry",parentName:"li"},"入口(entry)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#output",parentName:"li"},"输出(output)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#loaders",parentName:"li"},"loader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#plugins",parentName:"li"},"插件(plugin)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#mode",parentName:"li"},"模式(mode)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#browser-compatibility",parentName:"li"},"浏览器兼容性(browser compatibility)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"#environment",parentName:"li"},"环境(environment)"))),(0,n.kt)("p",null,"本文档旨在给出这些概念的",(0,n.kt)("strong",{parentName:"p"},"高度"),"概述，同时提供具体概念的详尽相关用例的链接。"),(0,n.kt)("p",null,"为了更好地理解模块打包工具背后的理念，以及在底层它们是如何运作的，请参考以下资源："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"https://www.youtube.com/watch?v=UNMkLHzofQI",parentName:"li"},"手动打包一个应用程序")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"https://www.youtube.com/watch?v=Gc9-7PBqOC8",parentName:"li"},"实时创建一个简单打包工具")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"https://github.com/ronami/minipack",parentName:"li"},"一个简单打包工具的详细说明"))),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"entry",parentName:"h2"}),"入口(entry)",(0,n.kt)("a",{href:"#entry","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"入口起点(entry point)")," 指示 webpack 应该使用哪个模块，来作为构建其内部 ",(0,n.kt)("a",{href:"/concepts/dependency-graph/",parentName:"p"},"依赖图(dependency graph)")," 的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。"),(0,n.kt)("p",null,"默认值是 ",(0,n.kt)("inlineCode",{parentName:"p"},"./src/index.js"),"，但你可以通过在 ",(0,n.kt)("a",{href:"/configuration",parentName:"p"},"webpack configuration")," 中配置 ",(0,n.kt)("inlineCode",{parentName:"p"},"entry")," 属性，来指定一个（或多个）不同的入口起点。例如："),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  entry",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./path/to/my/entry/file.js'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},"在 ",(0,n.kt)("a",{href:"/concepts/entry-points",parentName:"p"},"入口起点")," 章节可以了解更多信息。")),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"output",parentName:"h2"}),"输出(output)",(0,n.kt)("a",{href:"#output","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"output")," 属性告诉 webpack 在哪里输出它所创建的 ",(0,n.kt)("em",{parentName:"p"},"bundle"),"，以及如何命名这些文件。主要输出文件的默认值是 ",(0,n.kt)("inlineCode",{parentName:"p"},"./dist/main.js"),"，其他生成文件默认放置在 ",(0,n.kt)("inlineCode",{parentName:"p"},"./dist")," 文件夹中。"),(0,n.kt)("p",null,"你可以通过在配置中指定一个 ",(0,n.kt)("inlineCode",{parentName:"p"},"output")," 字段，来配置这些处理过程："),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'path'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  entry",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./path/to/my/entry/file.js'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  output",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    path",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," path",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'dist'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    filename",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'my-first-webpack.bundle.js'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"在上面的示例中，我们通过 ",(0,n.kt)("inlineCode",{parentName:"p"},"output.filename")," 和 ",(0,n.kt)("inlineCode",{parentName:"p"},"output.path")," 属性，来告诉 webpack bundle 的名称，以及我们想要 bundle 生成(emit)到哪里。可能你想要了解在代码最上面导入的 path 模块是什么，它是一个 ",(0,n.kt)("a",{href:"https://nodejs.org/api/modules.html",parentName:"p"},"Node.js 核心模块"),"，用于操作文件路径。"),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"output")," 属性还有 ",(0,n.kt)("a",{href:"/configuration/output",parentName:"p"},"更多可配置的特性"),"，如果你想要了解更多关于 ",(0,n.kt)("inlineCode",{parentName:"p"},"output")," 属性的概念，可以通过阅读 ",(0,n.kt)("a",{href:"/concepts/output",parentName:"p"},"输出章节")," 来了解更多。")),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"loaders",parentName:"h2"}),"loader",(0,n.kt)("a",{href:"#loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"webpack 只能理解 JavaScript 和 JSON 文件，这是 webpack 开箱可用的自带能力。",(0,n.kt)("strong",{parentName:"p"},"loader")," 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 ",(0,n.kt)("a",{href:"/concepts/modules",parentName:"p"},"模块"),"，以供应用程序使用，以及被添加到依赖图中。"),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,n.kt)("p",{parentName:"aside"},"webpack 的其中一个强大的特性就是能通过 ",(0,n.kt)("inlineCode",{parentName:"p"},"import")," 导入任何类型的模块（例如 ",(0,n.kt)("inlineCode",{parentName:"p"},".css")," 文件），其他打包程序或任务执行器的可能并不支持。我们认为这种语言扩展是很有必要的，因为这可以使开发人员创建出更准确的依赖关系图。")),(0,n.kt)("p",null,"在更高层面，在 webpack 的配置中，",(0,n.kt)("strong",{parentName:"p"},"loader")," 有两个属性："),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"test")," 属性，识别出哪些文件会被转换。"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"use")," 属性，定义出在进行转换时，应该使用哪个 loader。")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'path'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  output",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    filename",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'my-first-webpack.bundle.js'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  module",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{")," test",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token regex",parentName:"code"},"/\\.txt$/"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," use",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'raw-loader'")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"以上配置中，对一个单独的 module 对象定义了 ",(0,n.kt)("inlineCode",{parentName:"p"},"rules")," 属性，里面包含两个必须属性：",(0,n.kt)("inlineCode",{parentName:"p"},"test")," 和 ",(0,n.kt)("inlineCode",{parentName:"p"},"use"),"。这告诉 webpack 编译器(compiler) 如下信息："),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"“嘿，webpack 编译器，当你碰到「在 ",(0,n.kt)("inlineCode",{parentName:"p"},"require()"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"import")," 语句中被解析为 '.txt' 的路径」时，在你对它打包之前，先 ",(0,n.kt)("strong",{parentName:"p"},"use(使用)")," ",(0,n.kt)("inlineCode",{parentName:"p"},"raw-loader")," 转换一下。”")),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,n.kt)("p",{parentName:"aside"},"重要的是要记住，在 webpack 配置中定义 rules 时，要定义在 ",(0,n.kt)("inlineCode",{parentName:"p"},"module.rules")," 而不是 ",(0,n.kt)("inlineCode",{parentName:"p"},"rules")," 中。为了使你便于理解，如果没有按照正确方式去做，webpack 会给出警告。")),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,n.kt)("p",{parentName:"aside"},"请记住，使用正则表达式匹配文件时，你不要为它添加引号。也就是说，",(0,n.kt)("inlineCode",{parentName:"p"},"/\\.txt$/")," 与 ",(0,n.kt)("inlineCode",{parentName:"p"},"'/\\.txt$/'")," 或 ",(0,n.kt)("inlineCode",{parentName:"p"},'"/\\.txt$/"')," 不一样。前者指示 webpack 匹配任何以 .txt 结尾的文件，后者指示 webpack 匹配具有绝对路径 '.txt' 的单个文件; 这可能不符合你的意图。")),(0,n.kt)("p",null,"在使用 loader 时，可以阅读 ",(0,n.kt)("a",{href:"/concepts/loaders",parentName:"p"},"loader 章节")," 查看更深入的自定义配置。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"plugins",parentName:"h2"}),"插件(plugin)",(0,n.kt)("a",{href:"#plugins","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"loader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。"),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},"查看 ",(0,n.kt)("a",{href:"/api/plugins",parentName:"p"},"插件接口(plugin interface)"),"，学习如何使用它来扩展 webpack 能力。")),(0,n.kt)("p",null,"想要使用一个插件，你只需要 ",(0,n.kt)("inlineCode",{parentName:"p"},"require()")," 它，然后把它添加到 ",(0,n.kt)("inlineCode",{parentName:"p"},"plugins")," 数组中。多数插件可以通过选项(option)自定义。你也可以在一个配置文件中因为不同目的而多次使用同一个插件，这时需要通过使用 ",(0,n.kt)("inlineCode",{parentName:"p"},"new")," 操作符来创建一个插件实例。"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," HtmlWebpackPlugin ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'html-webpack-plugin'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," webpack ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 用于访问内置插件"),"\n\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  module",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{")," test",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token regex",parentName:"code"},"/\\.txt$/"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," use",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'raw-loader'")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  plugins",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"HtmlWebpackPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{")," template",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./src/index.html'")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"在上面的示例中，",(0,n.kt)("inlineCode",{parentName:"p"},"html-webpack-plugin")," 为应用程序生成一个 HTML 文件，并自动将生成的所有 bundle 注入到此文件中。"),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},"webpack 提供许多开箱可用的插件！查阅 ",(0,n.kt)("a",{href:"/plugins",parentName:"p"},"插件列表")," 获取更多。")),(0,n.kt)("p",null,"在 webpack 配置中使用插件是简单直接的。然而，也有很多值得我们进一步探讨的用例。",(0,n.kt)("a",{href:"/concepts/plugins",parentName:"p"},"查看这里了解更多"),"。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"mode",parentName:"h2"}),"模式(mode)",(0,n.kt)("a",{href:"#mode","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"通过选择 ",(0,n.kt)("inlineCode",{parentName:"p"},"development"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"production")," 或 ",(0,n.kt)("inlineCode",{parentName:"p"},"none")," 之中的一个，来设置 ",(0,n.kt)("inlineCode",{parentName:"p"},"mode")," 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 ",(0,n.kt)("inlineCode",{parentName:"p"},"production"),"。"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  mode",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'production'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"想要了解更多，请查阅 ",(0,n.kt)("a",{href:"/configuration/mode",parentName:"p"},"mode 配置"),"，这里有具体每个值相应的优化行为。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"browser-compatibility",parentName:"h2"}),"浏览器兼容性(browser compatibility)",(0,n.kt)("a",{href:"#browser-compatibility","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Webpack 支持所有符合 ",(0,n.kt)("a",{href:"https://kangax.github.io/compat-table/es5/",parentName:"p"},"ES5 标准")," 的浏览器（不支持 IE8 及以下版本）。webpack 的 ",(0,n.kt)("inlineCode",{parentName:"p"},"import()")," 和 ",(0,n.kt)("inlineCode",{parentName:"p"},"require.ensure()")," 需要 ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"。如果你想要支持旧版本浏览器，在使用这些表达式之前，还需要 ",(0,n.kt)("a",{href:"/guides/shimming/",parentName:"p"},"提前加载 polyfill"),"。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"environment",parentName:"h2"}),"环境(environment)",(0,n.kt)("a",{href:"#environment","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Webpack 5 运行于 Node.js v10.13.0+ 的版本。"))}s.isMDXComponent=!0,a.default=s}}]);