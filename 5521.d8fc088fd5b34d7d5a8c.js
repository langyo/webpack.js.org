"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5521],{5521:function(e,a,t){t.r(a),t(7378);var n=t(2682);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},i.apply(this,arguments)}function l(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",i({components:a},t),(0,n.kt)("p",null,"本指南目标是帮助你在使用 webpack 的时候直接迁移到 webpack 5。如果你使用运行 webpack 更底层的工具，请\n参考工具有关迁移的指引。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"preparations",parentName:"h2"}),"准备工作",(0,n.kt)("a",{href:"#preparations","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Webpack 5 对 Node.js 的版本要求至少是 10.13.0 (LTS)，因此，如果你还在使用旧版本的 Node.js，请升级它们。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"upgrade-webpack-and-its-plugins-loaders",parentName:"h2"}),"升级 webpack 4 及其相关的 plugin/loader",(0,n.kt)("a",{href:"#upgrade-webpack-and-its-plugins-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"升级 ",(0,n.kt)("inlineCode",{parentName:"li"},"webpack")," 4 至最新的可用版本。")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"当使用 webpack >= 4 时，升级到最新的 webpack 5 版本无需额外的操作。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你使用的 webpack 版本小于 4，请查阅 ",(0,n.kt)("a",{href:"/migrate/4/",parentName:"p"},"webpack 4 迁移指南"),"。"))),(0,n.kt)("ol",{start:"2"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"升级 ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack-cli")," 到最新的可用版本（如已使用的情况下）")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"升级所有使用到的 plugin 和 loader 为最新的可用版本。"))),(0,n.kt)("p",null,"部分 plugin 和 loader 可能会有一个 beta 版本，必须使用它们才能与 webpack 5 兼容。\n请确保在升级时阅读每个插件/loader 的发布说明，因为最新版本可能只支持 webpack 5，而在 v4 中会运行失败。在这种情况下，建议升级到支持 webpack 4 的最新版本。"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"make-sure-your-build-has-no-errors-or-warnings",parentName:"h3"}),"确保你的构建没有错误或警告",(0,n.kt)("a",{href:"#make-sure-your-build-has-no-errors-or-warnings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"由于升级了 ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack"),"，",(0,n.kt)("inlineCode",{parentName:"p"},"webpack-cli"),"，plugin 以及 loader 的版本，因此，可能会出现新的错误或警告。在编译过程中请注意是否有弃用警告。"),(0,n.kt)("p",null,"你可以通过如下方式调用 ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack")," 来获取堆栈信息中的弃用警告，从而找出是哪个 plugin 或 loader 造成的。"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-bash",parentName:"pre"},"node --trace-deprecation node_modules/webpack/bin/webpack.js")),(0,n.kt)("p",null,"由于 webpack 5 移除了所有被废弃的特性，因此，需确保在构建过程中没有 webpack 的弃用警告才能继续。"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"make-sure-to-use-mode",parentName:"h3"}),"请确保设置了 ",(0,n.kt)("inlineCode",{parentName:"h3"},"mode"),(0,n.kt)("a",{href:"#make-sure-to-use-mode","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"将 mode 设置成 ",(0,n.kt)("a",{href:"/configuration/mode/#mode-production",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"production"))," 或 ",(0,n.kt)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"development"))," 以确保相应的默认值被设置。"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"update-outdated-options",parentName:"h3"}),"升级废弃的配置项",(0,n.kt)("a",{href:"#update-outdated-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如有使用以下的配置项，请升级至最新的版本："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.hashedModuleIds: true")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'hashed'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.namedChunks: true")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.chunkIds: 'named'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.namedModules: true")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'named'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"NamedModulesPlugin")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'named'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"NamedChunksPlugin")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.chunkIds: 'named'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HashedModuleIdsPlugin")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'hashed'")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.noEmitOnErrors: false")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.emitOnErrors: true")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.occurrenceOrder: true")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization: { chunkIds: 'total-size', moduleIds: 'size' }")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.vendors")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.defaultVendors")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.test(module, chunks)")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.test(module, { chunkGraph, moduleGraph })")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Compilation.entries")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"Compilation.entryDependencies")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"serve")," → ",(0,n.kt)("inlineCode",{parentName:"li"},"serve")," 已被移除，推荐使用 ",(0,n.kt)("a",{href:"/configuration/dev-server/",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"DevServer"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"/configuration/module/#ruleoptions--rulequery",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"Rule.query"))," (从 v3 开始被移除) → ",(0,n.kt)("inlineCode",{parentName:"li"},"Rule.options"),"/",(0,n.kt)("inlineCode",{parentName:"li"},"UseEntry.options")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Rule.loaders")," → ",(0,n.kt)("a",{href:"/configuration/module/#ruleuse",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"Rule.use")))),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"test-webpack-5-compatibility",parentName:"h3"}),"测试 webpack 5 兼容性",(0,n.kt)("a",{href:"#test-webpack-5-compatibility","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"尝试在 webpack 4 的配置中添加如下选项，检查一下构建是否仍然正确的运行。"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  node",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    Buffer",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    process",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"你必须在升级 webpack 5 的配置时，必须删除这些选项。"),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,n.kt)("p",{parentName:"aside"},"webpack 5 从配置中移除了这些选项，并始终赋值 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"。")),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"upgrade-webpack-to-5",parentName:"h2"}),"升级至 webpack 5",(0,n.kt)("a",{href:"#upgrade-webpack-to-5","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"现在，让我们升级至 webpack 5："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"npm: ",(0,n.kt)("inlineCode",{parentName:"p"},"npm install webpack@latest"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Yarn: ",(0,n.kt)("inlineCode",{parentName:"p"},"yarn add webpack@latest")))),(0,n.kt)("p",null,"如果你之前在升级 webpack 4 时不能将某些插件或者 loader 升级到最新版本，现在不要忘了升级。"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"clean-up-configuration",parentName:"h3"}),"清理配置",(0,n.kt)("a",{href:"#clean-up-configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"请考虑将 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.moduleIds")," 和 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.chunkIds")," 从你 webpack 配置中移除。使用默认值会更合适，因为它们会在 ",(0,n.kt)("a",{href:"/configuration/mode/#mode-production",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"production 模式"))," 下支持长效缓存且可以在 ",(0,n.kt)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"development")," 模式"),"下进行调试。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"当 webpack 配置中使用了 ",(0,n.kt)("inlineCode",{parentName:"p"},"[hash]")," 占位符时，请考虑将它改为 ",(0,n.kt)("inlineCode",{parentName:"p"},"[contenthash]"),"。效果一致，但事实证明会更为有效。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你使用了 Yarn 的 PnP 以及 ",(0,n.kt)("inlineCode",{parentName:"p"},"pnp-webpack-plugin")," 插件，你可以将其从配置中移除，因为它已被默认支持。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你使用了带有正则表达式参数的 ",(0,n.kt)("inlineCode",{parentName:"p"},"IgnorePlugin"),"，现已支持传入一个 ",(0,n.kt)("inlineCode",{parentName:"p"},"options")," 对象：",(0,n.kt)("inlineCode",{parentName:"p"},"new IgnorePlugin({ resourceRegExp: /regExp/ })"),"。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你使用了类似于 ",(0,n.kt)("inlineCode",{parentName:"p"},"node.fs: 'empty'"),"，请使用 ",(0,n.kt)("inlineCode",{parentName:"p"},"resolve.fallback.fs: false")," 代替。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你在 webpack 的 Node.js API 中使用了 ",(0,n.kt)("inlineCode",{parentName:"p"},"watch: true"),"，请移除它。无需按编译器的提示设置它，当执行 ",(0,n.kt)("inlineCode",{parentName:"p"},"watch()")," 时为 ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),"，当执行 ",(0,n.kt)("inlineCode",{parentName:"p"},"run()")," 的时候为 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你定义了 ",(0,n.kt)("inlineCode",{parentName:"p"},"rules"),"，以使用 ",(0,n.kt)("inlineCode",{parentName:"p"},"raw-loader"),"，",(0,n.kt)("inlineCode",{parentName:"p"},"url-loader")," 或 ",(0,n.kt)("inlineCode",{parentName:"p"},"file-loader")," 来加载资源，请使用 ",(0,n.kt)("a",{href:"/guides/asset-modules/",parentName:"p"},"资源模块")," 替代，因为它们可能在不久的将来被淘汰。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你将 ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," 设置为函数，则应将其更新为 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"，然后在 ",(0,n.kt)("inlineCode",{parentName:"p"},"plugins")," 选项中使用该函数。具体示例如下："),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{className:"hljs language-json",parentName:"pre"},(0,n.kt)("span",{className:"token comment",parentName:"code"},"// for webpack 4"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," WebExtensionTarget(nodeConfig)\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// for webpack 5"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    plugins",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n        WebExtensionTarget(nodeConfig)\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"))))),(0,n.kt)("p",null,"如果通过 import 使用了 WebAssembly，应遵循以下两点："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"在配置增加 ",(0,n.kt)("inlineCode",{parentName:"li"},"experiments.syncWebAssembly: true")," 配置，以启用废弃提醒，获得在 webpack 4 中的相同行为。"),(0,n.kt)("li",{parentName:"ul"},"在成功升级至 webpack 5 以后，应将 ",(0,n.kt)("inlineCode",{parentName:"li"},"experiments")," 的值改为 ",(0,n.kt)("inlineCode",{parentName:"li"},"experiments: { asyncWebAssembly: true }")," 以使用最新规范的 WASM。")),(0,n.kt)("p",null,"重新考虑 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks")," 的配置："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"推荐使用默认配置或使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks: { chunks: 'all' }")," 配置。"),(0,n.kt)("li",{parentName:"ul"},"当使用自定义配置时，请删除 ",(0,n.kt)("inlineCode",{parentName:"li"},"name: false"),"，并将 ",(0,n.kt)("inlineCode",{parentName:"li"},"name: string | function")," 替换为 ",(0,n.kt)("inlineCode",{parentName:"li"},"idHint: string | function"),"。"),(0,n.kt)("li",{parentName:"ul"},"使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups: { default: false, vendors: false }")," 配置可以关闭默认值。但我们不推荐这么做，如果你需要在 webpack 5 中获得与之相同的效果：请将配置改为 ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups: { default: false, defaultVendors: false }"),"。")),(0,n.kt)("p",null,"考虑移除的默认值："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"当设置 ",(0,n.kt)("inlineCode",{parentName:"li"},"entry: './src/index.js'")," 时，你可以省略它，此为默认值。"),(0,n.kt)("li",{parentName:"ul"},"当设置 ",(0,n.kt)("inlineCode",{parentName:"li"},"output.path: path.resolve(__dirname, 'dist')")," 时：你可以省略它，此为默认值。"),(0,n.kt)("li",{parentName:"ul"},"当设置 ",(0,n.kt)("inlineCode",{parentName:"li"},"output.filename: '[name].js'")," 时：你可以省略它，此为默认值。")),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"need-to-support-an-older-browser-like-ie-11",parentName:"h3"}),"需要旧版浏览器的支持？比如 IE 11？",(0,n.kt)("a",{href:"#need-to-support-an-older-browser-like-ie-11","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如果你在项目中启用了 ",(0,n.kt)("a",{href:"https://github.com/browserslist/browserslist",parentName:"p"},"browserslist"),"，webpack 5 将会重用你的 ",(0,n.kt)("inlineCode",{parentName:"p"},"browserslist")," 配置来决定运行时的代码风格。"),(0,n.kt)("p",{parentName:"li"},"只要确保："),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"将 ",(0,n.kt)("a",{href:"/configuration/target/#root",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"target"))," 设置为 ",(0,n.kt)("inlineCode",{parentName:"li"},"browserslist"),"，或者移除 ",(0,n.kt)("inlineCode",{parentName:"li"},"target")," 配置，webpack 会自动将其置为 ",(0,n.kt)("inlineCode",{parentName:"li"},"browserslist"),"。"),(0,n.kt)("li",{parentName:"ol"},"在你的 browserslist 配置中添加 ",(0,n.kt)("inlineCode",{parentName:"li"},"IE 11"),"。"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"如未使用 ",(0,n.kt)("inlineCode",{parentName:"p"},"browserslist"),"，webpack 的运行时代码将默认使用 ES2015 语法（例如，箭头函数）来构建一个简洁的 bundles。如果你构建的目标环境并不支持 ES2015 的语法（如 IE 11），你需要设置 ",(0,n.kt)("inlineCode",{parentName:"p"},"target: ['web', 'es5']")," 以使用 ES5 的语法。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"对于 Node.js 环境来说，构建中引入了对 Node.js 版本的支持，webpack 会自动找出对应版本支持的语法，例如，",(0,n.kt)("inlineCode",{parentName:"p"},"target: 'node8.6'"),"。"))),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"cleanup-the-code",parentName:"h3"}),"清理代码",(0,n.kt)("a",{href:"#cleanup-the-code","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("h4",null,(0,n.kt)("span",{id:"using-webpack-chunk-name",parentName:"h4"}),"使用 ",(0,n.kt)("inlineCode",{parentName:"h4"},"/* webpackChunkName: '...' */")," 时",(0,n.kt)("a",{href:"#using-webpack-chunk-name","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"请确保你了解其意图："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"此处 chunk 的名称本意是 public 的。"),(0,n.kt)("li",{parentName:"ul"},"它不只是用于开发模式的名称。"),(0,n.kt)("li",{parentName:"ul"},"webpack 会在 production 以及 development 的模式中使用它对文件进行命名。"),(0,n.kt)("li",{parentName:"ul"},"即使不使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"webpackChunkName"),"，webpack 5 也会自动在 ",(0,n.kt)("inlineCode",{parentName:"li"},"development")," 模式下分配有意义的文件名。")),(0,n.kt)("h4",null,(0,n.kt)("span",{id:"using-named-exports-from-json-modules",parentName:"h4"}),"为 JSON 模块使用具名导出",(0,n.kt)("a",{href:"#using-named-exports-from-json-modules","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"新规范中将不再支持下面这种方式，如此做会发出警告："),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{")," version ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./package.json'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nconsole",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"log"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"version",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"请使用如下方式代替："),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," pkg ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./package.json'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nconsole",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"log"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"pkg",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"version",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h4",null,(0,n.kt)("span",{id:"cleanup-the-build-code",parentName:"h4"}),"清理构建代码",(0,n.kt)("a",{href:"#cleanup-the-build-code","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"当使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"const compiler = webpack(...);"),"，确保在使用完毕后，使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"compiler.close(callback);")," 关闭编译器。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"这不适用于自动关闭的 ",(0,n.kt)("inlineCode",{parentName:"li"},"webpack(..., callback)"),"。"),(0,n.kt)("li",{parentName:"ul"},"如果你在监听模式下使用 webpack，直到用户结束进程，此为可选。在监听模式下的空闲阶段将被用于执行此工作。")))),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"run-a-single-build-and-follow-advises",parentName:"h3"}),"运行单个构建并遵循以下建议",(0,n.kt)("a",{href:"#run-a-single-build-and-follow-advises","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"请务必仔细阅读构建时的错误/警告。如未发现相关建议，请创建一个 issue，我们会尽力解决。"),(0,n.kt)("p",null,"重复以下步骤，直到你至少解决到 Level 3 或 Level 4："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 1: ",(0,n.kt)("strong",{parentName:"p"},"模式（Schema）校验失败"),"。"),(0,n.kt)("p",{parentName:"li"},"配置选项已更改。应该要有校验失败的信息且附上 ",(0,n.kt)("inlineCode",{parentName:"p"},"BREAKING CHANGE:")," 提示，或提示应该使用哪个选项。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 2: ",(0,n.kt)("strong",{parentName:"p"},"webpack 异常退出并出现错误"),"。"),(0,n.kt)("p",{parentName:"li"},"错误信息应告诉你哪里需要进行修改。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 3: ",(0,n.kt)("strong",{parentName:"p"},"构建错误"),"。"),(0,n.kt)("p",{parentName:"li"},"错误信息应该要有 ",(0,n.kt)("inlineCode",{parentName:"p"},"BREAKING CHANGE:")," 提示。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 4: ",(0,n.kt)("strong",{parentName:"p"},"构建警告"),"。"),(0,n.kt)("p",{parentName:"li"},"警告信息应该告诉你哪里需要进行修改。")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 5: ",(0,n.kt)("strong",{parentName:"p"},"运行时错误"),"。"),(0,n.kt)("p",{parentName:"li"},"这很棘手，你可能要调试才能找到问题所在。在这里很难给出一个通用的建议。但我们在下面列出了一些关于运行时错误的常见建议："),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"process")," 未定义。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"webpack 5 不再引入 Node.js 变量的 polyfill，在前端代码中应避免使用。"),(0,n.kt)("li",{parentName:"ul"},"想支持浏览器的用法？使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"exports")," 或 ",(0,n.kt)("inlineCode",{parentName:"li"},"imports")," 中的 package.json 字段，会根据环境不同使用不同的代码。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"也可以使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"browser")," 字段来支持旧的 bundlers。"),(0,n.kt)("li",{parentName:"ul"},"替代方案。用 ",(0,n.kt)("inlineCode",{parentName:"li"},"typeof process")," 检查包裹的代码块。请注意，这将对 bundle 大小产生负面影响。"))),(0,n.kt)("li",{parentName:"ul"},"想要使用环境变量，如 ",(0,n.kt)("inlineCode",{parentName:"li"},"process.env.VARIABLE"),"？你需要使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"DefinePlugin")," 或 ",(0,n.kt)("inlineCode",{parentName:"li"},"EnvironmentPlugin")," 在配置中定义这些变量。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"考虑使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"VARIABLE")," 代替，但需要检查 ",(0,n.kt)("inlineCode",{parentName:"li"},"typeof VARIABLE !== 'undefined'"),"。",(0,n.kt)("inlineCode",{parentName:"li"},"process.env")," 是 Node.js 特有，应避免在前端中使用。"))))),(0,n.kt)("li",{parentName:"ul"},"404 的 error 将指向含有 ",(0,n.kt)("inlineCode",{parentName:"li"},"auto")," 的 URL",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"并非所有生态系统工具都已设置好新的 ",(0,n.kt)("inlineCode",{parentName:"li"},"publicPath")," 的默认值 ",(0,n.kt)("inlineCode",{parentName:"li"},'output.publicPath: "auto"'),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"使用静态的 ",(0,n.kt)("inlineCode",{parentName:"li"},'output.publicPath: ""')," 代替。"))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 6: ",(0,n.kt)("strong",{parentName:"p"},"弃用警告"),"."),(0,n.kt)("p",{parentName:"li"},"你可能会收到很多弃用警告，插件需要时间来赶上内核的变化。请将这些弃用上报给插件。这些弃用只是警告，构建仍然可以正常工作，只是会有小瑕疵（比如性能降低）。"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"你使用带有 ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-deprecation")," 选项的 node 运行 webpack，可以隐藏废弃告警，例如：",(0,n.kt)("inlineCode",{parentName:"li"},"node --no-deprecation node_modules/webpack/bin/webpack.js"),"。但这只能作为临时的解决方案。"),(0,n.kt)("li",{parentName:"ul"},"plugin 和 loader 的开发者，应遵循弃用信息中的建议以改进代码。"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Level 7: ",(0,n.kt)("strong",{parentName:"p"},"性能问题"),"."),(0,n.kt)("p",{parentName:"li"},"一般来说，webpack 5 的性能应该会有所提高，但也存在少数情况性能会变差。"),(0,n.kt)("p",{parentName:"li"},"而在这里，你可以做一些事情来改善这种情况："),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"通过 Profile 检查时间耗费在哪里。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--profile --progress")," 可以展示一个简单的性能曲线。"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"node --inspect-brk node_modules/webpack/bin/webpack.js")," + ",(0,n.kt)("a",{href:"chrome://inspect",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"chrome://inspect"))," / ",(0,n.kt)("a",{href:"edge://inspect",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"edge://inspect")),"（查看 profiler 选项）。",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"你可以将这些性能文件保存到文件中，并在 issues 中提供它们。"),(0,n.kt)("li",{parentName:"ul"},"尝试使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-turbo-inlining")," 选项，在某些情况下可以获得更好的堆栈信息。"))))),(0,n.kt)("li",{parentName:"ul"},"在增量构建时，构建模块的世界可以通过使用像 webpack 4 中的不安全缓存来改善：",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"module.unsafeCache: true")),(0,n.kt)("li",{parentName:"ul"},"但这可能会影响处理代码库的一些变化能力。"))),(0,n.kt)("li",{parentName:"ul"},"全量构建",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"与新功能相比，弃用特性的向后兼容层通常性能很差。"),(0,n.kt)("li",{parentName:"ul"},"创建许多警告会影响构建性能，即使它们被忽略。"),(0,n.kt)("li",{parentName:"ul"},"Source Maps 的代价很昂贵。请在文档中查看 ",(0,n.kt)("a",{href:"/configuration/devtool/",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"devtool"))," 选项以比较使用不同选项的代价。"),(0,n.kt)("li",{parentName:"ul"},"Anti-Virus（反病毒）保护可能会影响文件系统的访问性能。"),(0,n.kt)("li",{parentName:"ul"},"持久缓存可以帮助改善重复性的完整构建。"),(0,n.kt)("li",{parentName:"ul"},"Module Federation 允许将应用程序分割成多个较小的构建。")))))),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"everything-works",parentName:"h2"}),"所有情况都运行如常？",(0,n.kt)("a",{href:"#everything-works","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如果你成功地迁移至 webpack 5。请",(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https://webpack.js.org/migrate/5/&text=I%20just%20migrated%20to%20webpack%205%20using%20its%20migration%20guide!%20&via=webpack&hashtags=webpack,webpack5",parentName:"p"},"发推 @ 我们"),"。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"it-is-not-working",parentName:"h2"}),"运行异常？",(0,n.kt)("a",{href:"#it-is-not-working","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"创建一个 ",(0,n.kt)("a",{href:"https://github.com/webpack/webpack/issues/new?template=Bug_report.md",parentName:"p"},"issue")," 并告诉我们在迁移过程中你遇到的问题。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"something-missing-in-this-guide",parentName:"h2"}),"发现本指南中缺失的东西？",(0,n.kt)("a",{href:"#something-missing-in-this-guide","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"请提交 ",(0,n.kt)("a",{href:"https://github.com/webpack/webpack.js.org/edit/master/src/content/migrate/5.mdx",parentName:"p"},"Pull Request")," 以帮助其他开发者更好地使用该指南。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"changes-to-internals",parentName:"h2"}),"内核的改变",(0,n.kt)("a",{href:"#changes-to-internals","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如果你对内核感兴趣，此处会列出 webpack 内核相关的变更，如：添加类型，代码重构和方法重命名等。但这些变化并不会作为迁移通用案例的一部份。"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Module.nameForCondition"),"，",(0,n.kt)("inlineCode",{parentName:"li"},"Module.updateCacheModule")," 以及 ",(0,n.kt)("inlineCode",{parentName:"li"},"Module.chunkCondition")," 不再可选。")),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"getoptions-method-for-loaders",parentName:"h3"}),"loader 的 getOptions 方法",(0,n.kt)("a",{href:"#getoptions-method-for-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Webpack 5 发布后，在 loader 的上下文中，会带有内置的 ",(0,n.kt)("a",{href:"/api/loaders/#thisgetoptionsschema",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"this.getOptions"))," 方法。这对于那些使用之前推荐 ",(0,n.kt)("a",{href:"https://github.com/webpack/schema-utils",parentName:"p"},"schema-utils")," 中的 ",(0,n.kt)("inlineCode",{parentName:"p"},"getOptions")," 方法的 loader 而言，这是一个重大更新："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"this.getOptions")," 自 webpack 5 起支持使用"),(0,n.kt)("li",{parentName:"ul"},"它支持将 JSON 作为查询字符串，而不仅仅是 JSON5：如 ",(0,n.kt)("inlineCode",{parentName:"li"},"?{arg:true}")," → ",(0,n.kt)("inlineCode",{parentName:"li"},'?{"arg":true}'),"。在相应的 loader 文档中，应推荐使用 JSON 并不推荐使用 JSON5。"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{href:"https://github.com/webpack/loader-utils",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"loader-utils"))," 拥有解析查询字符串的特定行为（如 ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),"，",(0,n.kt)("inlineCode",{parentName:"li"},"false")," 以及 ",(0,n.kt)("inlineCode",{parentName:"li"},"null")," 不会被解析成 ",(0,n.kt)("inlineCode",{parentName:"li"},"string")," 而是原始类型的值）。这对于新的内置 ",(0,n.kt)("inlineCode",{parentName:"li"},"this.getOptions")," 方法来说，不再适用，它使用 Node 原生的 ",(0,n.kt)("a",{href:"https://nodejs.org/api/querystring.html",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"querystring"))," 方法进行解析。此时，需在 loader 中使用 ",(0,n.kt)("inlineCode",{parentName:"li"},"this.getOptions")," 获取配置选项之后，根据情况添加自定义行为。"),(0,n.kt)("li",{parentName:"ul"},"模式(Schema) 参数对新的 ",(0,n.kt)("inlineCode",{parentName:"li"},"this.getOptions")," 方法而言是可选的，但我们强烈建议给你的 loader 选项添加模式校验。模式中的 ",(0,n.kt)("inlineCode",{parentName:"li"},"title")," 字段，可用于自定义校验的错误信息，比如 ",(0,n.kt)("inlineCode",{parentName:"li"},'"title": "My Loader ooooptions"')," 会在这种方式展示错误信息：",(0,n.kt)("inlineCode",{parentName:"li"},"Invalid ooooptions object. My Loader has been initialised using an ooooptions object that does not match the API schema. - ooooptions.foo.bar.baz should be a string."),"。")))}l.isMDXComponent=!0,a.default=l}}]);