"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2433],{2433:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}const p=("Badge",e=>(console.warn("Component `%s` was not imported, exported, or provided by MDXProvider as global scope","Badge"),(0,t.kt)(t.kt.Fragment,null,e.children)));function o(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Compilation")," 模块会被 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 用来创建新的 compilation 对象（或新的 build 对象）。\n",(0,t.kt)("inlineCode",{parentName:"p"},"compilation")," 实例能够访问所有的模块和它们的依赖（大部分是循环依赖）。\n它会对应用程序的依赖图中所有模块，\n进行字面上的编译(literal compilation)。\n在编译阶段，模块会被加载(load)、封存(seal)、优化(optimize)、\n分块(chunk)、哈希(hash)和重新创建(restore)。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Compilation")," 类扩展(extend)自 ",(0,t.kt)("inlineCode",{parentName:"p"},"Tapable"),"，并提供了以下生命周期钩子。\n可以按照 compiler 钩子的相同方式来调用 tap："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"someHook",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"和 ",(0,t.kt)("inlineCode",{parentName:"p"},"compiler")," 用法相同，取决于不同的钩子类型，\n所以也可以在某些钩子上访问 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapAsync")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise"),"。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"buildmodule",parentName:"h3"}),"buildModule",(0,t.kt)("a",{href:"#buildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在模块构建开始之前触发，可以用来修改模块。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"buildModule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'SourceMapDevToolModuleOptionsPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"useSourceMap ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"rebuildmodule",parentName:"h3"}),"rebuildModule",(0,t.kt)("a",{href:"#rebuildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在重新构建一个模块之前触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"failedmodule",parentName:"h3"}),"failedModule",(0,t.kt)("a",{href:"#failedmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"模块构建失败时执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module")," ",(0,t.kt)("inlineCode",{parentName:"li"},"error"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"succeedmodule",parentName:"h3"}),"succeedModule",(0,t.kt)("a",{href:"#succeedmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"模块构建成功时执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"finishmodules",parentName:"h3"}),"finishModules",(0,t.kt)("a",{href:"#finishmodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"所有模块都完成构建并且没有错误时执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"finishrebuildingmodule",parentName:"h3"}),"finishRebuildingModule",(0,t.kt)("a",{href:"#finishrebuildingmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"一个模块完成重新构建时执行，在都成功或有错误的情况下。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"seal",parentName:"h3"}),"seal",(0,t.kt)("a",{href:"#seal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"compilation 对象停止接收新的模块时触发。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"unseal",parentName:"h3"}),"unseal",(0,t.kt)("a",{href:"#unseal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"compilation 对象开始接收新模块时触发。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizedependencies",parentName:"h3"}),"optimizeDependencies",(0,t.kt)("a",{href:"#optimizedependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"依赖优化开始时触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizedependencies",parentName:"h3"}),"afterOptimizeDependencies",(0,t.kt)("a",{href:"#afteroptimizedependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"依赖优化之后触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimize",parentName:"h3"}),"optimize",(0,t.kt)("a",{href:"#optimize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"优化阶段开始时触发。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizemodules",parentName:"h3"}),"optimizeModules",(0,t.kt)("a",{href:"#optimizemodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在模块优化阶段开始时调用。插件可以 tap 此钩子对模块进行优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizemodules",parentName:"h3"}),"afterOptimizeModules",(0,t.kt)("a",{href:"#afteroptimizemodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在模块优化完成之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizechunks",parentName:"h3"}),"optimizeChunks",(0,t.kt)("a",{href:"#optimizechunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在 chunk 优化阶段开始时调用。插件可以 tap 此钩子对 chunk 执行优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizechunks",parentName:"h3"}),"afterOptimizeChunks",(0,t.kt)("a",{href:"#afteroptimizechunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"chunk 优化完成之后触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizetree",parentName:"h3"}),"optimizeTree",(0,t.kt)("a",{href:"#optimizetree","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在优化依赖树之前调用。插件可以 tap 此钩子执行依赖树优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizetree",parentName:"h3"}),"afterOptimizeTree",(0,t.kt)("a",{href:"#afteroptimizetree","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在依赖树优化成功完成之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizechunkmodules",parentName:"h3"}),"optimizeChunkModules",(0,t.kt)("a",{href:"#optimizechunkmodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"在树优化之后，chunk 模块优化开始时调用。插件可以 tap 此钩子来执行 chunk 模块的优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizechunkmodules",parentName:"h3"}),"afterOptimizeChunkModules",(0,t.kt)("a",{href:"#afteroptimizechunkmodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 chunk 模块优化成功完成之后调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"shouldrecord",parentName:"h3"}),"shouldRecord",(0,t.kt)("a",{href:"#shouldrecord","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"调用来决定是否存储 record。返回任何内容 ",(0,t.kt)("inlineCode",{parentName:"p"},"!== false"),' 将阻止执行所有其他 "record" 钩子（',(0,t.kt)("a",{href:"#record",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"record")),", ",(0,t.kt)("a",{href:"#recordmodules",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"recordModules")),", ",(0,t.kt)("a",{href:"#recordchunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"recordChunks"))," 和 ",(0,t.kt)("a",{href:"#recordhash",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"recordHash")),"）。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"revivemodules",parentName:"h3"}),"reviveModules",(0,t.kt)("a",{href:"#revivemodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"从 record 中恢复模块信息。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules")," ",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforemoduleids",parentName:"h3"}),"beforeModuleIds",(0,t.kt)("a",{href:"#beforemoduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在为每个模块分配 ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 之前执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"moduleids",parentName:"h3"}),"moduleIds",(0,t.kt)("a",{href:"#moduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"调用来每个模块分配一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"id"),"。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizemoduleids",parentName:"h3"}),"optimizeModuleIds",(0,t.kt)("a",{href:"#optimizemoduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在模块 ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 优化开始时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizemoduleids",parentName:"h3"}),"afterOptimizeModuleIds",(0,t.kt)("a",{href:"#afteroptimizemoduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在模块 ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 优化完成时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"revivechunks",parentName:"h3"}),"reviveChunks",(0,t.kt)("a",{href:"#revivechunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"从 record 中恢复 chunk 信息。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforechunkids",parentName:"h3"}),"beforeChunkIds",(0,t.kt)("a",{href:"#beforechunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在为每个 chunk 分配 ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 之前执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"chunkids",parentName:"h3"}),"chunkIds",(0,t.kt)("a",{href:"#chunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"调用时，会为每个 chunk 分配一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"id"),"。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调函数的参数为：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizechunkids",parentName:"h3"}),"optimizeChunkIds",(0,t.kt)("a",{href:"#optimizechunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 chunk ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 优化阶段开始时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizechunkids",parentName:"h3"}),"afterOptimizeChunkIds",(0,t.kt)("a",{href:"#afteroptimizechunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"chunk ",(0,t.kt)("inlineCode",{parentName:"p"},"id")," 优化结束之后触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"recordmodules",parentName:"h3"}),"recordModules",(0,t.kt)("a",{href:"#recordmodules","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"将模块信息存储到 record 中。",(0,t.kt)("a",{href:"#shouldrecord",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"shouldRecord"))," 返回 truthy 值时触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"modules")," ",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"recordchunks",parentName:"h3"}),"recordChunks",(0,t.kt)("a",{href:"#recordchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"将 chunk 存储到 record 中。",(0,t.kt)("a",{href:"#shouldrecord",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"shouldRecord"))," 返回 truthy 值时触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks")," ",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforemodulehash",parentName:"h3"}),"beforeModuleHash",(0,t.kt)("a",{href:"#beforemodulehash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在创建模块哈希（hash）之前。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"aftermodulehash",parentName:"h3"}),"afterModuleHash",(0,t.kt)("a",{href:"#aftermodulehash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"syncHook")),(0,t.kt)("p",null,"在创建模块哈希（hash）之后。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforehash",parentName:"h3"}),"beforeHash",(0,t.kt)("a",{href:"#beforehash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 compilation 添加哈希（hash）之前。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterhash",parentName:"h3"}),"afterHash",(0,t.kt)("a",{href:"#afterhash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 compilation 添加哈希（hash）之后。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"recordhash",parentName:"h3"}),"recordHash",(0,t.kt)("a",{href:"#recordhash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"将有关 record 的信息存储到 ",(0,t.kt)("inlineCode",{parentName:"p"},"records")," 中。仅在 ",(0,t.kt)("a",{href:"#shouldrecord",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"shouldRecord"))," 返回 truthy 值时触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"record",parentName:"h3"}),"record",(0,t.kt)("a",{href:"#record","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"将 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation")," 相关信息存储到 ",(0,t.kt)("inlineCode",{parentName:"p"},"record")," 中。仅在 ",(0,t.kt)("a",{href:"#shouldrecord",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"shouldRecord"))," 返回 truthy 值时触发。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"compilation")," ",(0,t.kt)("inlineCode",{parentName:"li"},"records"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforemoduleassets",parentName:"h3"}),"beforeModuleAssets",(0,t.kt)("a",{href:"#beforemoduleassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在创建模块 asset 之前执行。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"additionalchunkassets",parentName:"h3"}),"additionalChunkAssets",(0,t.kt)("a",{href:"#additionalchunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"additionalChunkAssets")," 已弃用（可使用 ",(0,t.kt)("a",{href:"#processassets",parentName:"p"},"Compilation.hook.processAssets")," 来代替，并且可使用 ompilation.PROCESS_ASSETS_STAGE_* 作为其选项参数。）")),(0,t.kt)("p",null,"为这些 chunk 创建其他 asset。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"shouldgeneratechunkassets",parentName:"h3"}),"shouldGenerateChunkAssets",(0,t.kt)("a",{href:"#shouldgeneratechunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"调用以确定是否生成 chunk asset。返回任何 ",(0,t.kt)("inlineCode",{parentName:"p"},"!== false")," 将允许生成 chunk asset。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"beforechunkassets",parentName:"h3"}),"beforeChunkAssets",(0,t.kt)("a",{href:"#beforechunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在创建 chunk asset 之前。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"additionalassets",parentName:"h3"}),"additionalAssets",(0,t.kt)("a",{href:"#additionalassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"为 compilation 创建额外 asset。\n这个钩子可以用来下载图像，例如："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"additionalAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapAsync"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"download"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'https://img.shields.io/npm/v/webpack.svg'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"resp"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"resp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"status ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"200"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack-version.svg'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"toAsset"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"resp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"else")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"Error"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'[webpack-example-plugin] Unable to download the image'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizechunkassets",parentName:"h3"}),"optimizeChunkAssets",(0,t.kt)("a",{href:"#optimizechunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"optimizeChunkAssets")," 已弃用。（可使用 ",(0,t.kt)("a",{href:"#processassets",parentName:"p"},"Compilation.hook.processAssets")," 来代替，并且可使用 Compilation.PROCESS_ASSETS_STAGE_* 作为其选项参数。")),(0,t.kt)("p",null,"优化所有 chunk asset。asset 存储在 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation.assets")," 中。\n每个 ",(0,t.kt)("inlineCode",{parentName:"p"},"Chunk")," 都具有一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"files")," 属性，其指向由一个 chunk 创建的所有文件。\n任何额外 chunk asset 都存储在 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation.additionalChunkAssets")," 中。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("p",null,"Here's an example that adds a banner to each chunk."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"optimizeChunkAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapAsync"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"forEach"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunk"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"files",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"forEach"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"file"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"file",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"ConcatSource"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n          ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'/**Sweet Banner**/'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'\\n'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"file",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizechunkassets",parentName:"h3"}),"afterOptimizeChunkAssets",(0,t.kt)("a",{href:"#afteroptimizechunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"afterOptimizeChunkAssets")," 已弃用。（可使用 ",(0,t.kt)("a",{href:"#processassets",parentName:"p"},"Compilation.hook.processAssets")," 来代替，并且可使用 Compilation.PROCESS_ASSETS_STAGE_* 作为其选项参数。")),(0,t.kt)("p",null,"chunk asset 已经被优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunks"))),(0,t.kt)("p",null,"这里是一个来自 ",(0,t.kt)("a",{href:"https://github.com/boopathi",parentName:"p"},"@boopathi")," 的示例插件，详细地输出每个 chunk 里有什么。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"afterOptimizeChunkAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunks"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"forEach"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunk"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      id",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"id",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      includes",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"getModules"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"map"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"request",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"optimizeassets",parentName:"h3"}),"optimizeAssets",(0,t.kt)("a",{href:"#optimizeassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"优化存储在 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation.assets")," 中的所有 asset。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"assets"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afteroptimizeassets",parentName:"h3"}),"afterOptimizeAssets",(0,t.kt)("a",{href:"#afteroptimizeassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"asset 已经优化。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"assets"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"processassets",parentName:"h3"}),"processAssets",(0,t.kt)("a",{href:"#processassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"asset 处理."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Hook 参数：")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name: string")," — 插件名称"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"stage: Stage")," — a stage to tap into (see the ",(0,t.kt)("a",{href:"#list-of-asset-processing-stages",parentName:"li"},"list of supported stages")," below)"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"additionalAssets?: true | (assets, [callback]) => (void | Promise<void>)")," — a callback for additional assets (",(0,t.kt)("a",{href:"#additional-assets",parentName:"li"},"see below"),")")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"回调参数：")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"assets: { [pathname: string]: Source }")," — 普通对象，其中 key 是 asset 的路径名，value 是 asset 的数据，具体的代表请参考 ",(0,t.kt)("a",{href:"https://github.com/webpack/webpack-sources#source",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"Source")),"。")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"示例：")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"processAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    stage",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," Compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PROCESS_ASSETS_STAGE_ADDITIONS"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// see below for more stages"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'List of assets and their sizes:'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    Object",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"entries"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"forEach"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"["),"pathname",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," source",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"]")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"— "),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"pathname",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},": "),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"source",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),(0,t.kt)("span",{className:"token function",parentName:"span"},"size"),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},")"),(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"}," bytes"),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"additional-assets",parentName:"h4"}),"额外的 assets",(0,t.kt)("a",{href:"#additional-assets","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"除了 ",(0,t.kt)("inlineCode",{parentName:"p"},"name")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"stage")," 以外，你还可以传递 ",(0,t.kt)("inlineCode",{parentName:"p"},"additionalAssets")," ",(0,t.kt)(p,{text:"5.8.0+",parentName:"p",mdxType:"Badge"})," 选项，此选项可接受 ",(0,t.kt)("inlineCode",{parentName:"p"},"true")," 或者一个带有 ",(0,t.kt)("inlineCode",{parentName:"p"},"assets")," 的函数作为参数："),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"true")," - 针对插件后续添加的 asset 执行回调。"),(0,t.kt)("p",{parentName:"li"},"在此模式下，回调将被多次调用：一次是在指定阶段之前添加资产时，另一次是后来由插件添加资产时。（在本阶段或下一阶段）。"),(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"processAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    stage",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," Compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PROCESS_ASSETS_STAGE_DEV_TOOLING"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    additionalAssets",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// this function will be called multiple times with each bulk of assets"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")))),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"(assets, [callback]) => (void | Promise<void>)")," - 针对插件后续添加的 asset 执行指定的回调（在本阶段或下一阶段）。回调必须遵循所使用的 tap 函数的类型（例如，当与 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise()")," 一同使用时，它应该返回一个 Promise）。"),(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"processAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    stage",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," Compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PROCESS_ASSETS_STAGE_DEV_TOOLING"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"additionalAssets"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// this function potentially could be called multiple times for assets added on later stages"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// this function will be called once with assets added by plugins on prior stages"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"list-of-asset-processing-stages",parentName:"h4"}),"资产处理 stage 的列表",(0,t.kt)("a",{href:"#list-of-asset-processing-stages","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"如下是我们可以使用的 stage 清单（按顺序处理）："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_ADDITIONAL")," — 在编译中添加额外的 asset。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_PRE_PROCESS")," — asset 进行了基础预处理。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_DERIVED")," — 从已有 asset 中获取新的 asset。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_ADDITIONS")," — 为现有的 asset 添加额外的内容，例如 banner 或初始代码。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE")," — 以通用的方式优化已有 asset。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT")," — 优化现有资产的数量，例如，进行合并操作。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY")," — 优化现有 asset 兼容性，例如添加 polyfills 或者 vendor prefixes。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE")," — 优化现有 asset 大小，例如进行压缩或者删除空格。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_DEV_TOOLING")," — 为 asset 添加开发者工具，例如，提取 source map。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE")," ",(0,t.kt)(p,{text:"5.8.0+",parentName:"li",mdxType:"Badge"})," — 优化已有 asset 数量，例如，通过将 asset 内联到其他 asset 中。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_SUMMARIZE")," — 整理现有 asset 列表。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_HASH")," — 优化 asset 的 hash 值，例如，生成 asset 内容的真实 hash 值。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER")," — 优化已有 asset 的转换操作，例如对 asset 进行压缩，并作为独立的 asset。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_ANALYSE")," — 分析已有 asset。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS_ASSETS_STAGE_REPORT")," — 创建用于上报的 asset。")),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"assets-info",parentName:"h4"}),"Assets info",(0,t.kt)("a",{href:"#assets-info","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,'"asset info" 元数据不会自动提供给这个 hook。如果必须使用，你需要通过编译实例以及 asset 路径来手动获取这个元数据。这将在未来的 webpack 版本中得到改善。'),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Example:")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"processAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/** … */"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    Object",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"entries"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"forEach"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"["),"pathname",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," source",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"]")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," assetInfo ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"assetsInfo",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"get"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"pathname",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// @todo: do something with "pathname", "source" and "assetInfo"'),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterprocessassets",parentName:"h3"}),"afterProcessAssets",(0,t.kt)("a",{href:"#afterprocessassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"在 ",(0,t.kt)("a",{href:"#processassets",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"processAssets"))," hook 无错误执行后调用。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"needadditionalseal",parentName:"h3"}),"needAdditionalSeal",(0,t.kt)("a",{href:"#needadditionalseal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"调用来决定 compilation 是否需要解除 seal 以引入其他文件。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"afterseal",parentName:"h3"}),"afterSeal",(0,t.kt)("a",{href:"#afterseal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"AsyncSeriesHook")),(0,t.kt)("p",null,"在 ",(0,t.kt)("inlineCode",{parentName:"p"},"needAdditionalSeal")," 之后立即执行。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"chunkhash",parentName:"h3"}),"chunkHash",(0,t.kt)("a",{href:"#chunkhash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"触发来为每个 chunk 生成 hash。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," ",(0,t.kt)("inlineCode",{parentName:"li"},"chunkHash"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"moduleasset",parentName:"h3"}),"moduleAsset",(0,t.kt)("a",{href:"#moduleasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"一个模块中的一个 asset 被添加到 compilation 时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"module")," ",(0,t.kt)("inlineCode",{parentName:"li"},"filename"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"chunkasset",parentName:"h3"}),"chunkAsset",(0,t.kt)("a",{href:"#chunkasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"一个 chunk 中的一个 asset 被添加到 compilation 时调用。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," ",(0,t.kt)("inlineCode",{parentName:"li"},"filename"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"assetpath",parentName:"h3"}),"assetPath",(0,t.kt)("a",{href:"#assetpath","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncWaterfallHook")),(0,t.kt)("p",null,"调用以决定 asset 的路径。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"path")," ",(0,t.kt)("inlineCode",{parentName:"li"},"options"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"needadditionalpass",parentName:"h3"}),"needAdditionalPass",(0,t.kt)("a",{href:"#needadditionalpass","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")),(0,t.kt)("p",null,"调用以决定 asset 在输出后是否需要进一步处理。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"childcompiler",parentName:"h3"}),"childCompiler",(0,t.kt)("a",{href:"#childcompiler","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SyncHook")),(0,t.kt)("p",null,"子 compiler 设置之后执行。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"回调参数：",(0,t.kt)("inlineCode",{parentName:"li"},"childCompiler")," ",(0,t.kt)("inlineCode",{parentName:"li"},"compilerName")," ",(0,t.kt)("inlineCode",{parentName:"li"},"compilerIndex"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"normalmoduleloader",parentName:"h3"}),"normalModuleLoader",(0,t.kt)("a",{href:"#normalmoduleloader","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"从 webpack v5 开始，",(0,t.kt)("inlineCode",{parentName:"p"},"normalModuleLoader")," 钩子已经删除。现在要访问 loader 请改用 ",(0,t.kt)("inlineCode",{parentName:"p"},"NormalModule.getCompilationHooks(compilation).loader"),"。"))}o.isMDXComponent=!0,a.default=o}}]);