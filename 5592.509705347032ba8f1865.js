"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5592],{5592:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"本指南继续沿用 ",(0,t.kt)("a",{href:"/guides/asset-management",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"管理资源"))," 指南中的代码示例。")),(0,t.kt)("p",null,"目前为止，都是在 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件中手动引入所有资源，然而随着应用程序的不断增长，一旦开始 ",(0,t.kt)("a",{href:"/guides/caching",parentName:"p"},"使用哈希值进行文件命名")," 并输出 ",(0,t.kt)("a",{href:"/guides/code-splitting",parentName:"p"},"多个 bundle"),"，手动管理 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件将变得困难。使用一些插件可以更容易管理这个过程。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"preparation",parentName:"h2"}),"预先准备",(0,t.kt)("a",{href:"#preparation","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"首先调整一下项目结构："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," webpack-demo\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- package.json\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- package-lock.json\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- webpack.config.js\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- /dist\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- /src\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   |- index.js\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   |- print.js\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- /node_modules")))),(0,t.kt)("p",null,"在 ",(0,t.kt)("inlineCode",{parentName:"p"},"src/print.js")," 文件中添加一些逻辑："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/print.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"printMe"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'I get called from print.js!'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("p",null,"并在 ",(0,t.kt)("inlineCode",{parentName:"p"},"src/index.js")," 文件中使用这个函数："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"import _ from 'lodash';\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"import printMe from './print.js';\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  const btn = document.createElement('button');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  btn.innerHTML = 'Click me and check the console!';\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  btn.onclick = printMe;\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  element.appendChild(btn);\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,t.kt)("p",null,"更新 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist/index.html")," 文件，为 webpack 分离入口文件做准备："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"dist/index.html")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"<!DOCTYPE html>\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"<html>\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  <head>\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},'    <meta charset="utf-8" />\n')),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    <title>管理资源</title>\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    <title>管理输出</title>\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'    <script src="./print.bundle.js"><\/script>\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  </head>\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  <body>\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},'    <script src="bundle.js"><\/script>\n')),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},'    <script src="./index.bundle.js"><\/script>\n')),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  </body>\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"</html>")))),(0,t.kt)("p",null,"接下来调整配置：在 entry 添加 ",(0,t.kt)("inlineCode",{parentName:"p"},"src/print.js")," 作为新的入口起点（命名为 ",(0,t.kt)("inlineCode",{parentName:"p"},"print"),"），然后修改 output 使得能够根据入口起点定义的名称动态生成 bundle 名称："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: 'bundle.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"执行 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 将看到输出如下："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.5")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1")," related asset\nasset print.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"316")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: print",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.36")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"406")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/print.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"83")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1996")," ms")),(0,t.kt)("p",null,"可以看到，webpack 将会生成 ",(0,t.kt)("inlineCode",{parentName:"p"},"print.bundle.js")," 与 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.bundle.js")," 文件，即与在 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件中指定的文件名称相对应。试试在浏览器中打开 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),"，看看点击按钮时会发生什么。"),(0,t.kt)("p",null,"如果更改入口起点的名称，或者添加一个新的入口起点，那么会在构建时重新命名生成的 bundle，而 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 仍然在引用旧的名称。使用 ",(0,t.kt)("a",{href:"/plugins/html-webpack-plugin",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"HtmlWebpackPlugin"))," 插件可以解决这个问题。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"setting-up-htmlwebpackplugin",parentName:"h2"}),"设置 HtmlWebpackPlugin",(0,t.kt)("a",{href:"#setting-up-htmlwebpackplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"安装插件并且调整 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpack.config.js")," 文件："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"npm")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"install")," --save-dev html-webpack-plugin")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    new HtmlWebpackPlugin({\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      title: '管理输出',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  ],\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"需要注意，在执行构建之前，虽然在 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist/")," 文件夹已经有了自定义的 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件，但是 ",(0,t.kt)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin")," 插件仍然会默认生成 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件，即使用新生成的 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 文件替换原有文件。观察执行 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 后会发生什么："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"69.5")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1")," related asset\nasset print.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"316")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: print",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset index.html ",(0,t.kt)("span",{className:"token number",parentName:"code"},"253")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.36")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"406")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/print.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"83")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2189")," ms")),(0,t.kt)("p",null,"代码编辑器中打开 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html")," 会发现 ",(0,t.kt)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin")," 创建了一个全新的文件，而所有的 bundle 都已自动添加到其中。"),(0,t.kt)("p",null,"参阅 ",(0,t.kt)("a",{href:"https://github.com/jantimon/html-webpack-plugin",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"HtmlWebpackPlugin"))," 仓库源码以了解 ",(0,t.kt)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin")," 插件提供的全部功能。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"cleaning-up-the-dist-folder",parentName:"h2"}),"清理 ",(0,t.kt)("inlineCode",{parentName:"h2"},"/dist")," 文件夹",(0,t.kt)("a",{href:"#cleaning-up-the-dist-folder","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"可能已经注意到，由于遗留了之前的指南的代码示例，",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 文件夹已经变得相当杂乱。webpack 生成文件并将其默认放置在 ",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 文件夹中，但是它不会追踪哪些文件是实际在项目中需要的。"),(0,t.kt)("p",null,"通常比较推荐的做法是在每次构建前清理 ",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 文件夹，那么构建后就只会存在将要用到的文件。可以使用 ",(0,t.kt)("a",{href:"/configuration/output/#outputclean",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"output.clean"))," 配置选项实现这个需求。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    new HtmlWebpackPlugin({\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"      title: 'Output Management',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    clean: true,\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"再次执行 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 后检查 ",(0,t.kt)("inlineCode",{parentName:"p"},"/dist")," 文件夹。如果一切顺利，现在只会看到构建后生成的文件，而没有旧文件！"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"the-manifest",parentName:"h2"}),"manifest",(0,t.kt)("a",{href:"#the-manifest","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"你可能会对 webpack 和 webpack 插件似乎“知道”应该生成哪些文件感兴趣。webpack 通过 manifest 追踪所有模块到输出的 bundle 之间的映射。了解 manifest 将会帮助了解如何以其他方式控制 webpack ",(0,t.kt)("a",{href:"/configuration/output",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"输出")),"。"),(0,t.kt)("p",null,(0,t.kt)("a",{href:"https://github.com/shellscape/webpack-manifest-plugin",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"WebpackManifestPlugin"))," 插件可以将 manifest 数据提取为 json 文件。"),(0,t.kt)("p",null,"参阅 ",(0,t.kt)("a",{href:"/concepts/manifest",parentName:"p"},"manifest")," 概念页面以深入了解如何在项目中使用此插件，同时 ",(0,t.kt)("a",{href:"/guides/caching",parentName:"p"},"缓存")," 指南介绍了其与长效缓存之间的关系。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"conclusion",parentName:"h2"}),"总结",(0,t.kt)("a",{href:"#conclusion","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"现在已经了解如何向 HTML 动态添加 bundle，接下来继续深入 ",(0,t.kt)("a",{href:"/guides/development",parentName:"p"},"开发环境")," 指南。如果想要深入更多相关高级话题，那么推荐前往 ",(0,t.kt)("a",{href:"/guides/code-splitting",parentName:"p"},"代码分离")," 指南。"))}p.isMDXComponent=!0,a.default=p}}]);