"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1789],{1789:function(e,a,n){n.r(a),n(7378);var t=n(2682);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},l.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",l({components:a},n),(0,t.kt)("p",null,"这些选项可以配置是否 polyfill 或 mock 某些 ",(0,t.kt)("a",{href:"https://nodejs.org/docs/latest/api/globals.html",parentName:"p"},"Node.js 全局变量"),"。"),(0,t.kt)("p",null,"此功能由 webpack 内部的 ",(0,t.kt)("a",{href:"https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"NodeStuffPlugin"))," 插件提供。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"从 webpack 5 开始，你只能在 ",(0,t.kt)("inlineCode",{parentName:"p"},"node")," 选项下配置 ",(0,t.kt)("inlineCode",{parentName:"p"},"global"),"、",(0,t.kt)("inlineCode",{parentName:"p"},"__filename")," 或 ",(0,t.kt)("inlineCode",{parentName:"p"},"__dirname"),"。如果需要在 webpack 5 下的 Node.js 中填充 ",(0,t.kt)("inlineCode",{parentName:"p"},"fs"),"，请查阅 ",(0,t.kt)("a",{href:"/configuration/resolve/#resolvefallback",parentName:"p"},"resolve.fallback")," 获取相关帮助。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"node",parentName:"h2"}),"node",(0,t.kt)("a",{href:"#node","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean: false")," ",(0,t.kt)("inlineCode",{parentName:"p"},"object")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  node",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    global",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    __filename",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    __dirname",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"从 webpack 3.0.0 开始，",(0,t.kt)("inlineCode",{parentName:"p"},"node")," 选项可能被设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),"，以完全关闭 ",(0,t.kt)("inlineCode",{parentName:"p"},"NodeStuffPlugin")," 插件。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"nodeglobal",parentName:"h2"}),"node.global",(0,t.kt)("a",{href:"#nodeglobal","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,t.kt)("inlineCode",{parentName:"p"},"'warn'")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"如果你正在使用一个需要全局变量的模块，请使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"ProvidePlugin")," 替代 ",(0,t.kt)("inlineCode",{parentName:"p"},"global"),"。")),(0,t.kt)("p",null,"关于此对象的准确行为，请查看",(0,t.kt)("a",{href:"https://nodejs.org/api/globals.html#globals_global",parentName:"p"},"Node.js 文档"),"。"),(0,t.kt)("p",null,"选项："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"true"),": 提供 polyfill."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"false"),": 不提供任何 polyfill。代码可能会出现 ",(0,t.kt)("inlineCode",{parentName:"li"},"ReferenceError")," 的崩溃。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'warn'"),": 当使用 ",(0,t.kt)("inlineCode",{parentName:"li"},"global")," 时展示一个警告。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"node__filename",parentName:"h2"}),"node.__filename",(0,t.kt)("a",{href:"#node__filename","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,t.kt)("inlineCode",{parentName:"p"},"'mock' | 'warn-mock' | 'eval-only'")),(0,t.kt)("p",null,"选项："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"true"),": ",(0,t.kt)("strong",{parentName:"li"},"输入"),"文件的文件名，是相对于 ",(0,t.kt)("a",{href:"/configuration/entry-context/#context",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"context")," 选项"),"。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"false"),": webpack 不会更改 ",(0,t.kt)("inlineCode",{parentName:"li"},"__filename")," 的代码。在 Node.js 环境中运行时，",(0,t.kt)("strong",{parentName:"li"},"出"),"文件的文件名。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'mock'"),": value 填充为 ",(0,t.kt)("inlineCode",{parentName:"li"},"'index.js'"),"。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'warn-mock'"),": 使用 ",(0,t.kt)("inlineCode",{parentName:"li"},"'/index.js'")," 但是会展示一个警告。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'eval-only'"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"node__dirname",parentName:"h2"}),"node.__dirname",(0,t.kt)("a",{href:"#node__dirname","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,t.kt)("inlineCode",{parentName:"p"},"'mock' | 'warn-mock' | 'eval-only'")),(0,t.kt)("p",null,"选项："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"true"),": ",(0,t.kt)("strong",{parentName:"li"},"输入")," 文件的目录名，是相对于 ",(0,t.kt)("a",{href:"/configuration/entry-context/#context",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"context")," 选项"),"。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"false"),": webpack 不会更改 ",(0,t.kt)("inlineCode",{parentName:"li"},"__dirname")," 的代码，这意味着你有常规 Node.js 中的 ",(0,t.kt)("inlineCode",{parentName:"li"},"__dirname")," 的行为。在 Node.js 环境中运行时，",(0,t.kt)("strong",{parentName:"li"},"输出")," 文件的目录名。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'mock'"),": value 填充为 ",(0,t.kt)("inlineCode",{parentName:"li"},"'/'"),"。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'warn-mock'"),": 使用 ",(0,t.kt)("inlineCode",{parentName:"li"},"'/'")," 但是会显示一个警告。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'eval-only'"))))}p.isMDXComponent=!0,a.default=p}}]);