"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8197],{8197:function(e,a,n){n.r(a),n(7378);var t=n(2682);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},o.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",o({components:a},n),(0,t.kt)("p",null,"使用 Logger 输出消息是一种向用户展示信息的有效方式。"),(0,t.kt)("p",null,"Webpack Logger 可以用在 ",(0,t.kt)("a",{href:"/loaders/",parentName:"p"},"loader")," 和 ",(0,t.kt)("a",{href:"/api/plugins/#logging",parentName:"p"},"plugin"),"。生成的 Logger 将作为 ",(0,t.kt)("a",{href:"/api/stats/",parentName:"p"},"统计信息")," 的一部分进行输出，并且用户可以在 ",(0,t.kt)("a",{href:"/configuration/",parentName:"p"},"webpack 配置文件")," 中对 Logger 进行配置。"),(0,t.kt)("p",null,"在 Webpack 中使用自定义 Logger API 的优点："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"可以 ",(0,t.kt)("a",{href:"/configuration/stats/#statslogging",parentName:"li"},"配置")," 日志的展示级别"),(0,t.kt)("li",{parentName:"ul"},"日志内容可作为 ",(0,t.kt)("inlineCode",{parentName:"li"},"stats.json")," 的一部分输出"),(0,t.kt)("li",{parentName:"ul"},"统计预设会影响日志的输出"),(0,t.kt)("li",{parentName:"ul"},"使用 plugin 可以影响日志的捕获与展示级别"),(0,t.kt)("li",{parentName:"ul"},"当使用多个 plugin 和 loader 时，提供更加通用的日志记录解决方案"),(0,t.kt)("li",{parentName:"ul"},"基于 Webpack 开发的 CLI、UI 工具等可能会选择不同的方式来展示日志"),(0,t.kt)("li",{parentName:"ul"},"Webpack 核心可以触发日志输出，例如：timing data")),(0,t.kt)("p",null,"通过引入 Webpack Logger API，我们希望统一 Webpack plugins 和 loaders 生成日志的方式，并提供更好的方法来检查构建问题。 集成的 Logging 解决方案可以帮助 plugins 和 loader 的开发人员提升他们的开发经验。同时为非 CLI 形式的 Webpack 解决方案构建铺平了道路，例如 dashboard 或其他 UI。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("strong",{parentName:"p"},"避免在日志中输出无效信息！")," 请记住，多个 plugin 和 loader 经常一起使用。loader 通常处理多个文件，并且每个文件都会调用，所以尽可能选择较低的日志级别以保证 log 的信息量。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"examples-of-how-to-get-and-use-webpack-logger-in-loaders-and-plugins",parentName:"h2"}),"Examples of how to get and use webpack logger in loaders and plugins",(0,t.kt)("a",{href:"#examples-of-how-to-get-and-use-webpack-logger-in-loaders-and-plugins","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"my-webpack-plugin.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token constant",parentName:"code"},"PLUGIN_NAME")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-webpack-plugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"MyWebpackPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// you can access Logger from compiler"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," logger ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"getInfrastructureLogger"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PLUGIN_NAME"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    logger",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'log from compiler'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PLUGIN_NAME"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// you can also access Logger from compilation"),"\n      ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," logger ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"getLogger"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PLUGIN_NAME"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      logger",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"info"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'log from compilation'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"my-webpack-loader.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"source"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// you can get Logger with `this.getLogger` in your webpack loaders"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," logger ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"this"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"getLogger"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-webpack-loader'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  logger",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"info"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'hello Logger'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," source",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"从上面的 ",(0,t.kt)("inlineCode",{parentName:"p"},"my-webpack-plugin.js")," 例子中你可以看到，有两种打印日志的方法，"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("inlineCode",{parentName:"li"},"compilation.getLogger")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("inlineCode",{parentName:"li"},"compiler.getInfrastructureLogger"))),(0,t.kt)("p",null,"当 plugin/logging 与编译相关时，建议使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation.getLogger"),"，它们将存储在 stats 中。对于在编译周期之外发生的日志记录，请改用 ",(0,t.kt)("inlineCode",{parentName:"p"},"compiler.getInfrastructureLogger"),"。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"logger-methods",parentName:"h2"}),"Logger methods",(0,t.kt)("a",{href:"#logger-methods","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.error(...)"),"：用于输出错误信息"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.warn(...)"),"：用于输出警告信息"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.info(...)"),"：用于输出",(0,t.kt)("strong",{parentName:"li"},"重要"),"信息。默认情况下会显示这些信息，所以仅用于输出用户真正需要查看的消息"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.log(...)"),"：用于输出",(0,t.kt)("strong",{parentName:"li"},"不重要"),"的信息。只有当用户选择查看时，才会显示"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.debug(...)"),"：用于输出调试信息。只有当用户选择查看特定模块的调试日志时，才会显示"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.trace()"),"：显示堆栈跟踪信息，展示形式类似于 ",(0,t.kt)("inlineCode",{parentName:"li"},"logger.debug")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.group(...)"),"：将消息进行分组，展示形式类似于 ",(0,t.kt)("inlineCode",{parentName:"li"},"logger.log")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.groupEnd()"),"：结束消息分组"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.groupCollapsed(...)"),"：将消息进行分组。默认显示为折叠 ",(0,t.kt)("inlineCode",{parentName:"li"},"logger.log")," 日志，当日志记录级别设置为 ",(0,t.kt)("inlineCode",{parentName:"li"},"'verbose'")," 或 ",(0,t.kt)("inlineCode",{parentName:"li"},"'debug'")," 时，显示展开的日志"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.status"),"：写入一条临时消息，并且设置新状态，覆盖上一个状态"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.clear()"),"：打印水平线。展示形式类似于 ",(0,t.kt)("inlineCode",{parentName:"li"},"logger.log")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logger.profile(...)"),"，",(0,t.kt)("inlineCode",{parentName:"li"},"logger.profileEnd(...)"),"：捕获配置文件。当支持 ",(0,t.kt)("inlineCode",{parentName:"li"},"console.profile")," API 时，使用其进行输出")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"runtime-logger-api",parentName:"h2"}),"Runtime Logger API",(0,t.kt)("a",{href:"#runtime-logger-api","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Runtime logger API 仅应该用作开发工具，不应该包含在 ",(0,t.kt)("a",{href:"/configuration/mode/#mode-production",parentName:"p"},"生产模式"),"中。"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"const logging = require('webpack/lib/logging/runtime')"),"：直接从 Webpack 中引入即可使用 logger API"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logging.getLogger('name')"),"：根据名称获取一个 logger 的实例"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logging.configureDefaultLogger(...)"),"：重写 logger 的默认配置")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," logging ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack/lib/logging/runtime'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nlogging",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"configureDefaultLogger"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  level",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'log'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  debug",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/something/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"logging.hooks.log"),"：向 logger 中添加 Plugins")))}p.isMDXComponent=!0,a.default=p}}]);