"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1286],{1286:function(e,t,a){a.r(t),a(7378);var n=a(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},p.apply(this,arguments)}function r(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",p({components:t},a),(0,n.kt)("p",null,"webpack 能够为多种环境或 ",(0,n.kt)("em",{parentName:"p"},"target")," 构建编译。想要理解什么是 ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," 的详细信息，\n请阅读 ",(0,n.kt)("a",{href:"/concepts/targets/",parentName:"p"},"target 概念页面"),"。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"target",parentName:"h2"}),"target",(0,n.kt)("a",{href:"#target","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," ",(0,n.kt)("inlineCode",{parentName:"p"},"[string]")," ",(0,n.kt)("inlineCode",{parentName:"p"},"false")),(0,n.kt)("p",null,"告知 webpack 为目标(target)指定一个环境。默认值为 ",(0,n.kt)("inlineCode",{parentName:"p"},'"browserslist"'),"，如果没有找到 browserslist 的配置，则默认为 ",(0,n.kt)("inlineCode",{parentName:"p"},'"web"')),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"string",parentName:"h3"}),"string",(0,n.kt)("a",{href:"#string","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"通过 ",(0,n.kt)("a",{href:"https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"WebpackOptionsApply")),"，\n可以支持以下字符串值："),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr"},"选项"),(0,n.kt)("th",{parentName:"tr"},"描述"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"async-node"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为类 Node.js 环境可用（使用 fs 和 vm 异步加载分块）"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"electron-main"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为 ",(0,n.kt)("a",{href:"https://electronjs.org/",parentName:"span"},"Electron")," 主进程。"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"electron-renderer"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为 ",(0,n.kt)("a",{href:"https://electronjs.org/",parentName:"span"},"Electron")," 渲染进程，使用 ",(0,n.kt)("inlineCode",{parentName:"span"},"JsonpTemplatePlugin"),","))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"FunctionModulePlugin")," 来为浏览器环境提供目标，使用 ",(0,n.kt)("inlineCode",{parentName:"span"},"NodeTargetPlugin")," 和 ",(0,n.kt)("inlineCode",{parentName:"span"},"ExternalsPlugin"))),(0,n.kt)("td",{parentName:"tr"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"为 CommonJS 和 Electron 内置模块提供目标。")),(0,n.kt)("td",{parentName:"tr"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"electron-preload"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为 ",(0,n.kt)("a",{href:"https://electronjs.org/",parentName:"span"},"Electron")," 渲染进程，"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"使用 ",(0,n.kt)("inlineCode",{parentName:"span"},"NodeTemplatePlugin")," 且 ",(0,n.kt)("inlineCode",{parentName:"span"},"asyncChunkLoading")," 设置为 ",(0,n.kt)("inlineCode",{parentName:"span"},"true")," ，",(0,n.kt)("inlineCode",{parentName:"span"},"FunctionModulePlugin")," 来为浏览器提供目标，使用 ",(0,n.kt)("inlineCode",{parentName:"span"},"NodeTargetPlugin")," 和 ",(0,n.kt)("inlineCode",{parentName:"span"},"ExternalsPlugin")," 为 CommonJS 和 Electron 内置模块提供目标。")),(0,n.kt)("td",{parentName:"tr"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"node"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为类 Node.js 环境可用（使用 Node.js ",(0,n.kt)("inlineCode",{parentName:"span"},"require")," 加载 chunks）"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"node-webkit"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为 Webkit 可用，并且使用 jsonp 去加载分块。支持 Node.js 内置模块和 ",(0,n.kt)("a",{href:"http://docs.nwjs.io/en/latest/",parentName:"span"},(0,n.kt)("inlineCode",{parentName:"a"},"nw.gui"))))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"导入（实验性质）")),(0,n.kt)("td",{parentName:"tr"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"nwjs[[X].Y]"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"等价于 ",(0,n.kt)("inlineCode",{parentName:"span"},"node-webkit")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"web"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为类浏览器环境里可用 ",(0,n.kt)("strong",{parentName:"span"},"（默认）")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"webworker"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译成一个 WebWorker"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"esX"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"编译为指定版本的 ECMAScript。例如，es5，es2020"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"选项",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"browserslist"))),(0,n.kt)("td",{"data-th":"描述",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"从 browserslist-config 中推断出平台和 ES 特性 ",(0,n.kt)("strong",{parentName:"span"},"（如果 browserslist 可用，其值则为默认）")))))),(0,n.kt)("p",null,"例如，当 ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," 设置为 ",(0,n.kt)("inlineCode",{parentName:"p"},'"electron-main"'),"，webpack 引入多个 electron 特定的变量。"),(0,n.kt)("p",null,"可指定 ",(0,n.kt)("inlineCode",{parentName:"p"},"node")," 或者 ",(0,n.kt)("inlineCode",{parentName:"p"},"electron")," 的版本。上表中使用 ",(0,n.kt)("inlineCode",{parentName:"p"},"[[X].Y]")," 表示。"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'node12.18'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"它有助于确定可能用于生成运行时代码的 ES 特性（所有的 chunk 和模块都被运行时代码所包裹）"),(0,n.kt)("h4",null,(0,n.kt)("span",{id:"browserslist",parentName:"h4"}),"browserslist",(0,n.kt)("a",{href:"#browserslist","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如果一个项目有 browserslist 配置，那么 webpack 将会使用它："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"确定可用于运行时代码的 ES 特性。"),(0,n.kt)("li",{parentName:"ul"},"推断环境（例如：",(0,n.kt)("inlineCode",{parentName:"li"},"last 2 node versions")," 等价于 ",(0,n.kt)("inlineCode",{parentName:"li"},"target: node"),"，并会进行一些 ",(0,n.kt)("a",{href:"/configuration/output/#outputenvironment",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"output.environment"))," 设置).")),(0,n.kt)("p",null,"支持的 browserslist 值："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"browserslist")," - 使用自动解析的 browserslist 配置和环境（从最近的 ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," 或 ",(0,n.kt)("inlineCode",{parentName:"li"},"BROWSERSLIST")," 环境变量中获取，具体请查阅 ",(0,n.kt)("a",{href:"https://github.com/browserslist/browserslist#queries",parentName:"li"},"browserslist 文档"),"）"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"browserslist:modern")," - 使用自动解析的 browserslist 配置中的 ",(0,n.kt)("inlineCode",{parentName:"li"},"modern")," 环境"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"browserslist:last 2 versions")," - 使用显式 browserslist 查询（配置将被忽略）"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"browserslist:/path/to/config")," - 明确指定 browserslist 配置路径"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"browserslist:/path/to/config:modern")," - 明确指定 browserslist 的配置路径和环境")),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"string",parentName:"h3"}),"[string]",(0,n.kt)("a",{href:"#string","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"当传递多个目标时，将使用共同的特性子集："),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token string",parentName:"code"},"'web'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'es5'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"Webpack 将生成 web 平台的运行时代码，并且只使用 ES5 相关的特性。"),(0,n.kt)("p",null,"目前并不是所有的 target 都可以进行混合。"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token string",parentName:"code"},"'web'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'node'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"此时会导致错误。webpack 暂时不支持 universal 的 target。"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"false",parentName:"h3"}),"false",(0,n.kt)("a",{href:"#false","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如果上述列表中的预设 target 都不符合你的需求，你可以将 ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," 设置为 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"，这将告诉 webpack 不使用任何插件。"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"或者可以使用你想要指定的插件"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," webpack ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  target",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  plugins",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"web",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"JsonpTemplatePlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"options",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"output",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"LoaderTargetPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'web'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"当没有提供 target 或 ",(0,n.kt)("a",{href:"/configuration/output/#outputenvironment",parentName:"p"},"environment")," 特性的信息时，将默认使用 ES2015。"))}r.isMDXComponent=!0,t.default=r}}]);