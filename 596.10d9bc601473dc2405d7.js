"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[596],{596:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"本指南继续沿用 ",(0,t.kt)("a",{href:"/guides/getting-started",parentName:"p"},"起步")," 中的示例代码。请确保你已熟悉这些指南中提供的示例以及 ",(0,t.kt)("a",{href:"/guides/output-management/",parentName:"p"},"管理输出")," 章节。")),(0,t.kt)("p",null,"代码分离是 webpack 中最引人注目的特性之一。此特性能够把代码分离到不同的 bundle 中，然后便能按需加载或并行加载这些文件。代码分离可以用于获取更小的 bundle、控制资源加载优先级，如果使用合理，会极大减小加载时间。"),(0,t.kt)("p",null,"常用的代码分离方法有三种："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"入口起点"),"：使用 ",(0,t.kt)("a",{href:"/configuration/entry-context",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"entry"))," 配置手动地分离代码。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"防止重复"),"：使用 ",(0,t.kt)("a",{href:"/configuration/entry-context/#dependencies",parentName:"li"},"入口依赖")," 或者 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"SplitChunksPlugin"))," 去重和分离 chunk。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"动态导入"),"：通过模块的内联函数调用分离代码。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"entry-points",parentName:"h2"}),"入口起点",(0,t.kt)("a",{href:"#entry-points","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"这是迄今为止最简单直观的实现代码分离的方式。不过，这种方式手动配置较多，并有一些隐患。不过，我们将会介绍如何解决这些隐患。先来看看如何从 main bundle 中分离另一个模块："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n|- /src\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- index.js\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- another-module.js\n")),"|- /node_modules")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"another-module.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," _ ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'lodash'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nconsole",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"_",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Another'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'loaded!'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"' '"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  mode: 'development',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    another: './src/another-module.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"构建后结果如下："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"553")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset another.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"553")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: another",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2.49")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"12")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"257")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/another-module.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"84")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"245")," ms")),(0,t.kt)("p",null,"正如前面所提及，这种方式存在一些隐患："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"如果入口 chunk 之间包含一些重复的模块，那么这些重复模块会被引入到各个 bundle 中。"),(0,t.kt)("li",{parentName:"ul"},"这种方法不够灵活，并且不能动态地拆分应用程序逻辑中的核心代码。")),(0,t.kt)("p",null,"以上两点中，第一点所对应的问题已经在我们上面的实例中体现出来了。除了 ",(0,t.kt)("inlineCode",{parentName:"p"},"./src/another-module.js"),"，我们也曾在 ",(0,t.kt)("inlineCode",{parentName:"p"},"./src/index.js")," 中引入过 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"，这就导致了重复引用。下一章节会介绍如何移除重复的模块。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"prevent-duplication",parentName:"h2"}),"防止重复",(0,t.kt)("a",{href:"#prevent-duplication","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"entry-dependencies",parentName:"h3"}),"入口依赖",(0,t.kt)("a",{href:"#entry-dependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"在配置文件中配置 ",(0,t.kt)("a",{href:"/configuration/entry-context/#dependencies",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"dependOn"))," 选项，以在多个 chunk 之间共享模块："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  mode: 'development',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    another: './src/another-module.js',\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      import: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      dependOn: 'shared',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    another: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      import: './src/another-module.js',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      dependOn: 'shared',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    shared: 'lodash',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"如果想要在一个 HTML 页面上使用多个入口起点，还需设置 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.runtimeChunk: 'single'"),"，否则会遇到 ",(0,t.kt)("a",{href:"https://bundlers.tooling.report/code-splitting/multi-entry/",parentName:"p"},"此处")," 所述的麻烦。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  mode: 'development',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"      import: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"      dependOn: 'shared',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    another: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"      import: './src/another-module.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"      dependOn: 'shared',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    shared: 'lodash',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  optimization: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    runtimeChunk: 'single',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"构建结果如下："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset shared.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: shared",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset runtime.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7.79")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: runtime",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.77")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset another.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.65")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: another",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nEntrypoint index ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.77")," KiB ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," index.bundle.js\nEntrypoint another ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1.65")," KiB ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," another.bundle.js\nEntrypoint shared ",(0,t.kt)("span",{className:"token number",parentName:"code"},"557")," KiB ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," runtime.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7.79")," KiB shared.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"3.76")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/another-module.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"84")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"257")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"249")," ms")),(0,t.kt)("p",null,"可以看到，除了 ",(0,t.kt)("inlineCode",{parentName:"p"},"shared.bundle.js"),"，",(0,t.kt)("inlineCode",{parentName:"p"},"index.bundle.js")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"another.bundle.js")," 之外，还生成了一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"runtime.bundle.js")," 文件。"),(0,t.kt)("p",null,"尽管 webpack 允许每个页面使用多个入口起点，但在可能的情况下，应该避免使用多个入口起点，而使用具有多个导入的单个入口起点：",(0,t.kt)("inlineCode",{parentName:"p"},"entry: { page: ['./analytics', './app'] }"),"。这样可以获得更好的优化效果，并在使用异步脚本标签时保证执行顺序一致。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksplugin",parentName:"h3"}),"SplitChunksPlugin",(0,t.kt)("a",{href:"#splitchunksplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("a",{href:"/plugins/split-chunks-plugin",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"SplitChunksPlugin"))," 插件可以将公共的依赖模块提取到已有的入口 chunk 中，或者提取到一个新生成的 chunk。让我们使用这个插件去除之前示例中重复的 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash")," 模块："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   mode: 'development',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   entry: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     index: './src/index.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     another: './src/another-module.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"     path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   optimization: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     splitChunks: {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"       chunks: 'all',\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     },\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," };")))),(0,t.kt)("p",null,"使用 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/#optimizationsplitchunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.splitChunks"))," 配置选项后构建，将会发现 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.bundle.js")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"another.bundle.js")," 已经移除了重复的依赖模块。从插件将 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash")," 分离到单独的 chunk，并且将其从 main bundle 中移除，减轻了 bundle 大小。执行 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 查看效果："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset vendors-node_modules_lodash_lodash_js.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"id hint: vendors",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"8.92")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset another.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"8.8")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: another",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nEntrypoint index ",(0,t.kt)("span",{className:"token number",parentName:"code"},"558")," KiB ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," vendors-node_modules_lodash_lodash_js.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"8.92")," KiB\nEntrypoint another ",(0,t.kt)("span",{className:"token number",parentName:"code"},"558")," KiB ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," vendors-node_modules_lodash_lodash_js.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB another.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"8.8")," KiB\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7.64")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"14")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"257")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/another-module.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"84")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"241")," ms")),(0,t.kt)("p",null,"以下是由社区提供，对代码分离很有帮助的 plugin 和 loader："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"/plugins/mini-css-extract-plugin",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"mini-css-extract-plugin")),"：用于将 CSS 从主应用程序中分离。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"dynamic-imports",parentName:"h2"}),"动态导入",(0,t.kt)("a",{href:"#dynamic-imports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack 提供了两个类似的技术实现动态代码分离。第一种，也是推荐选择的方式，是使用符合 ",(0,t.kt)("a",{href:"https://github.com/tc39/proposal-dynamic-import",parentName:"p"},"ECMAScript 提案")," 的 ",(0,t.kt)("a",{href:"/api/module-methods/#import",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"import()")," 语法")," 实现动态导入。第二种则是 webpack 的遗留功能，使用 webpack 特定的 ",(0,t.kt)("a",{href:"/api/module-methods/#requireensure",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"require.ensure")),"。让我们先尝试使用第一种。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"调用 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 会在内部使用 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",parentName:"p"},"promise"),"。因此如果在旧版本浏览器中（如 IE 11）使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"，需要使用一个 polyfill 库（例如 ",(0,t.kt)("a",{href:"https://github.com/stefanpenner/es6-promise",parentName:"p"},"es6-promise")," 或 ",(0,t.kt)("a",{href:"https://github.com/taylorhakes/promise-polyfill",parentName:"p"},"promise-polyfill"),"）shim ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise"),"。")),(0,t.kt)("p",null,"在我们开始之前，先从上述示例的配置中移除多余的 ",(0,t.kt)("a",{href:"/concepts/entry-points/",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"entry"))," 和 ",(0,t.kt)("a",{href:"/plugins/split-chunks-plugin/#optimizationsplitchunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.splitChunks")),"，因为接下来的演示中并不需要它们："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  mode: 'development',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    another: './src/another-module.js',\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  optimization: {\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    splitChunks: {\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      chunks: 'all',\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    },\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  },\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"};")))),(0,t.kt)("p",null,"我们将更新我们的项目，移除现在未使用的文件："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n|- /src\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- index.js\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- another-module.js\n")),"|- /node_modules")),(0,t.kt)("p",null,"现在，我们不再静态导入 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"，而是通过动态导入来分离出一个 chunk："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"import _ from 'lodash';\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"function component() {\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"function getComponent() {\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  // lodash 现在使用 import 引入\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  return import('lodash')\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    .then(({ default: _ }) => {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      const element = document.createElement('div');\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  return element;\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      return element;\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    })\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    .catch((error) => 'An error occurred while loading the component');\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"getComponent().then((component) => {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  document.body.appendChild(component);\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"});")))),(0,t.kt)("p",null,"需要 ",(0,t.kt)("inlineCode",{parentName:"p"},"default")," 的原因是自 webpack 4 之后，在导入 CommonJS 模块时，将不再解析为 ",(0,t.kt)("inlineCode",{parentName:"p"},"module.exports")," 的值，而是创建一个人工命名空间对象来表示此 CommonJS 模块。参阅 ",(0,t.kt)("a",{href:"https://medium.com/webpack/webpack-4-import-and-commonjs-d619d626b655",parentName:"p"},"webpack 4: import() and CommonJs")," 以了解更多有关信息。"),(0,t.kt)("p",null,"试试构建最新的代码，看看 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash")," 是否会分离到一个单独的 bundle："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset vendors-node_modules_lodash_lodash_js.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"549")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"id hint: vendors",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset index.bundle.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"13.5")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\nruntime modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"7.37")," KiB ",(0,t.kt)("span",{className:"token number",parentName:"code"},"11")," modules\ncacheable modules ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"434")," bytes ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"268")," ms")),(0,t.kt)("p",null,"由于 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 会返回 promise，因此它可以和 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"async")," 函数")," 一起使用。下面是使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"async")," 简化后的代码："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"function getComponent() {\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"async function getComponent() {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  const { default: _ } = await import('lodash');\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  return import('lodash')\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    .then(({ default: _ }) => {\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      const element = document.createElement('div');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"      return element;\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    })\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"    .catch((error) => 'An error occurred while loading the component');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"  return element;\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"getComponent().then((component) => {\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"  document.body.appendChild(component);\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"});")))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"在稍后示例中，当需要根据计算后的变量导入特定模块时，可以通过向 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 传入一个 ",(0,t.kt)("a",{href:"/api/module-methods/#dynamic-expressions-in-import",parentName:"p"},"动态表达式")," 实现。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"prefetchingpreloading-modules",parentName:"h2"}),"预获取/预加载模块",(0,t.kt)("a",{href:"#prefetchingpreloading-modules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Webpack v4.6.0+ 增加了对预获取和预加载的支持。"),(0,t.kt)("p",null,"声明 ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," 时使用下列内置指令可以让 webpack 输出“Resource Hint”告知浏览器："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"预获取（prefetch）"),"：将来某些导航下可能需要的资源"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"预加载（preload）"),"：当前导航下可能需要资源")),(0,t.kt)("p",null,"试想一下下面的场景：现在有一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"HomePage")," 组件，该组件内部渲染了一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"LoginButton")," 组件，点击后按钮后可以按需加载 ",(0,t.kt)("inlineCode",{parentName:"p"},"LoginModal")," 组件。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"LoginButton.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackPrefetch: true */")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./path/to/LoginModal.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"上面的代码在构建时会生成 ",(0,t.kt)("inlineCode",{parentName:"p"},'<link rel="prefetch" href="login-modal-chunk.js">')," 并追加到页面头部，指示浏览器在闲置时间预获取 ",(0,t.kt)("inlineCode",{parentName:"p"},"login-modal-chunk.js")," 文件。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"只要父 chunk 完成加载，webpack 就会添加预获取提示。")),(0,t.kt)("p",null,"与预获取指令相比，预加载指令有许多不同之处："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"预加载 chunk 会在父 chunk 加载时以并行方式开始加载；而预获取 chunk 会在父 chunk 加载结束后开始加载。"),(0,t.kt)("li",{parentName:"ul"},"预加载 chunk 具有中等优先级，并会立即下载；而预获取 chunk 则在浏览器闲置时下载。"),(0,t.kt)("li",{parentName:"ul"},"预加载 chunk 会在父 chunk 中立即请求，用于当下时刻；而预获取 chunk 则用于未来的某个时刻。"),(0,t.kt)("li",{parentName:"ul"},"浏览器支持程度不同。")),(0,t.kt)("p",null,"下面这个简单的预加载示例中，有一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"Component"),"，依赖于一个较大的库，所以应该将其分离到一个独立的 chunk 中。"),(0,t.kt)("p",null,"假想这里的图表组件 ",(0,t.kt)("inlineCode",{parentName:"p"},"ChartComponent")," 组件需要依赖一个体积巨大的 ",(0,t.kt)("inlineCode",{parentName:"p"},"ChartingLibrary")," 库。它会在渲染时显示一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"LoadingIndicator")," 组件，然后立即按需导入 ",(0,t.kt)("inlineCode",{parentName:"p"},"ChartingLibrary"),"："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"ChartComponent.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackPreload: true */")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'ChartingLibrary'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"在页面中使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"ChartComponent")," 时会在请求 ",(0,t.kt)("inlineCode",{parentName:"p"},"ChartComponent.js")," 的同时通过 ",(0,t.kt)("inlineCode",{parentName:"p"},'<link rel="preload">')," 请求 ",(0,t.kt)("inlineCode",{parentName:"p"},"charting-library-chunk"),"。假定 page-chunk 体积比 ",(0,t.kt)("inlineCode",{parentName:"p"},"charting-library-chunk")," 更小，也更快地被加载完成，那么当 ",(0,t.kt)("inlineCode",{parentName:"p"},"charting-library-chunk")," 加载完成后，页面会首先显示 ",(0,t.kt)("inlineCode",{parentName:"p"},"LoadingIndicator"),"；当 ",(0,t.kt)("inlineCode",{parentName:"p"},"charting-library-chunk")," 请求完成后，",(0,t.kt)("inlineCode",{parentName:"p"},"LoadingIndicator")," 组件才会消失。这将会使得加载时间能够更短一点，因为只进行单次往返，而不是两次往返，尤其是在高延迟环境下。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"不正确地使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpackPreload")," 会有损性能，请谨慎使用。")),(0,t.kt)("p",null,"有时需要自己控制预加载。例如，任何动态导入的预加载都可以通过异步脚本完成。这在流式服务器端渲染的情况下很有用。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"lazyComp")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'DynamicComponent'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"catch"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"error"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 在发生错误时做一些处理"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 例如可以在网络错误的情况下重试请求"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"如果在 webpack 开始加载该脚本之前脚本加载失败（如果该脚本不在页面上，webpack 只是创建一个 script 标签来加载其代码），则该 catch 处理程序将不会启动，直到 ",(0,t.kt)("a",{href:"/configuration/output/#outputchunkloadtimeout",parentName:"p"},"chunkLoadTimeout")," 未通过。此行为可能是意料之外的。但这是可以解释的 —— webpack 不能抛出任何错误，因为 webpack 不知道那个脚本失败了。webpack 将在错误发生后立即将 onerror 处理脚本添加到 script 中。"),(0,t.kt)("p",null,"可以通过添加自己的 onerror 处理脚本避免上述问题，这能够帮助在错误发生时移除该脚本"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-html",parentName:"pre"},(0,t.kt)("span",{className:"token tag",parentName:"code"},(0,t.kt)("span",{className:"token tag",parentName:"span"},(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"<"),"script"),"\n  ",(0,t.kt)("span",{className:"token attr-name",parentName:"span"},"src"),(0,t.kt)("span",{className:"token attr-value",parentName:"span"},(0,t.kt)("span",{className:"token punctuation attr-equals",parentName:"span"},"="),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},'"'),"https://example.com/dist/dynamicComponent.js",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},'"')),"\n  ",(0,t.kt)("span",{className:"token attr-name",parentName:"span"},"async"),"\n  ",(0,t.kt)("span",{className:"token attr-name",parentName:"span"},"onerror"),(0,t.kt)("span",{className:"token attr-value",parentName:"span"},(0,t.kt)("span",{className:"token punctuation attr-equals",parentName:"span"},"="),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},'"'),"this.remove()",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},'"')),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},">")),(0,t.kt)("span",{className:"token script",parentName:"code"}),(0,t.kt)("span",{className:"token tag",parentName:"code"},(0,t.kt)("span",{className:"token tag",parentName:"span"},(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"</"),"script"),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},">")))),(0,t.kt)("p",null,"这种情况下错误脚本将被删除，而 webpack 将创建自己的脚本，并且任何错误都将被处理而没有任何超时。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"bundle-analysis",parentName:"h2"}),"分析 bundle",(0,t.kt)("a",{href:"#bundle-analysis","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"一旦开始分离代码，一件很有帮助的事情是，分析输出结果来检查模块在何处结束。",(0,t.kt)("a",{href:"https://github.com/webpack/analyse",parentName:"p"},"官方分析工具")," 是一个不错的开始。还有一些其他社区支持的可选项："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://alexkuz.github.io/webpack-chart/",parentName:"li"},"webpack-chart"),"：webpack stats 可交互饼图。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://chrisbateman.github.io/webpack-visualizer/",parentName:"li"},"webpack-visualizer"),"：分析并可视化 bundle，检查哪些模块占用空间，哪些可能是重复使用的。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://github.com/webpack-contrib/webpack-bundle-analyzer",parentName:"li"},"webpack-bundle-analyzer"),"：一个 plugin 和 CLI 工具，它将 bundle 内容展示为一个便捷的、交互式、可缩放的树状图形式。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://webpack.jakoblind.no/optimize",parentName:"li"},"webpack bundle optimize helper"),"：这个工具会分析 bundle，并提供可操作的改进措施，以减少 bundle 的大小。"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://github.com/bundle-stats/bundle-stats",parentName:"li"},"bundle-stats"),"：生成一个 bundle 报告（bundle 大小、资源、模块），并比较不同构建之间的结果。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"next-steps",parentName:"h2"}),"下一步",(0,t.kt)("a",{href:"#next-steps","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"接下来，参阅 ",(0,t.kt)("a",{href:"/guides/lazy-loading/",parentName:"p"},"懒加载")," 了解如何在真实的应用程序中使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"，以及参阅 ",(0,t.kt)("a",{href:"/guides/caching/",parentName:"p"},"缓存")," 了解如何有效地进行代码分离。"))}p.isMDXComponent=!0,a.default=p}}]);