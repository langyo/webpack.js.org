"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3139],{3139:function(e,t,n){n.r(t),n(7378);var a=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},p.apply(this,arguments)}function r(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",p({components:t},n),(0,a.kt)("p",null,"webpack 能够为其加载的所有脚本添加 ",(0,a.kt)("inlineCode",{parentName:"p"},"nonce"),"，即一次性随机数。在入口文件中设置一个 ",(0,a.kt)("inlineCode",{parentName:"p"},"__webpack_nonce__")," 变量以激活此功能。然后为每个唯一的页面视图生成和提供一个唯一的基于哈希的 ",(0,a.kt)("inlineCode",{parentName:"p"},"nonce"),"。这就是为什么应该在入口文件中指定 ",(0,a.kt)("inlineCode",{parentName:"p"},"__webpack_nonce__")," 而非在配置中指定的原因。请注意，",(0,a.kt)("inlineCode",{parentName:"p"},"__webpack_nonce__")," 应该是一个 base64 编码的字符串。"),(0,a.kt)("h2",null,(0,a.kt)("span",{id:"examples",parentName:"h2"}),"示例",(0,a.kt)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,a.kt)("span",{className:"header-link",parentName:"a"}))),(0,a.kt)("p",null,"在入口文件中："),(0,a.kt)("pre",null,(0,a.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,a.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n__webpack_nonce__ ",(0,a.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,a.kt)("span",{className:"token string",parentName:"code"},"'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM='"),(0,a.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,a.kt)("span",{className:"token comment",parentName:"code"},"// ..."))),(0,a.kt)("h2",null,(0,a.kt)("span",{id:"enabling-csp",parentName:"h2"}),"启用 CSP",(0,a.kt)("a",{href:"#enabling-csp","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,a.kt)("span",{className:"header-link",parentName:"a"}))),(0,a.kt)("p",null,"注意，默认情况下不启用 CSP。需要与文档一同发送相应的 ",(0,a.kt)("inlineCode",{parentName:"p"},"CSP")," 响应头 ",(0,a.kt)("inlineCode",{parentName:"p"},"<Content-Security-Policy")," 或元标签 ",(0,a.kt)("inlineCode",{parentName:"p"},'<meta http-equiv="Content-Security-Policy" ...>')," 以告知浏览器需要启用 CSP。以下是一个包含 CDN 白名单 URL 的 CSP 头部示例："),(0,a.kt)("pre",null,(0,a.kt)("code",{className:"hljs language-html",parentName:"pre"},"Content-Security-Policy: default-src 'self'; script-src 'self'\nhttps://trusted.cdn.com;")),(0,a.kt)("p",null,"参阅页面底部的 ",(0,a.kt)("strong",{parentName:"p"},"延伸阅读")," 以了解更多关于 CSP 与 ",(0,a.kt)("inlineCode",{parentName:"p"},"nonce")," 属性的信息。"),(0,a.kt)("h2",null,(0,a.kt)("span",{id:"trustedtypes",parentName:"h2"}),"信任类型",(0,a.kt)("a",{href:"#trustedtypes","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,a.kt)("span",{className:"header-link",parentName:"a"}))),(0,a.kt)("p",null,"只需遵守 CSP ",(0,a.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for",parentName:"p"},(0,a.kt)("inlineCode",{parentName:"a"},"require-trusted-types-for"))," 指令的限制，webpack 便能够使用信任类型加载动态构建的脚本。参阅 ",(0,a.kt)("a",{href:"/configuration/output/#outputtrustedtypes",parentName:"p"},(0,a.kt)("inlineCode",{parentName:"a"},"output.trustedTypes"))," 配置项了解更多。"))}r.isMDXComponent=!0,t.default=r}}]);