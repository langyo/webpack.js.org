"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9529],{9529:function(e,a,n){n.r(a),n(7378);var t=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function s(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",p({components:a},n),(0,t.kt)("p",null,"最初，chunks（以及内部导入的模块）是通过内部 webpack 图谱中的父子关系关联的。",(0,t.kt)("inlineCode",{parentName:"p"},"CommonsChunkPlugin")," 曾被用来避免他们之间的重复依赖，但是不可能再做进一步的优化。"),(0,t.kt)("p",null,"从 webpack v4 开始，移除了 ",(0,t.kt)("inlineCode",{parentName:"p"},"CommonsChunkPlugin"),"，取而代之的是 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks"),"。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"defaults",parentName:"h2"}),"默认值",(0,t.kt)("a",{href:"#defaults","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"开箱即用的 ",(0,t.kt)("inlineCode",{parentName:"p"},"SplitChunksPlugin")," 对于大部分用户来说非常友好。"),(0,t.kt)("p",null,"默认情况下，它只会影响到按需加载的 chunks，因为修改 initial chunks 会影响到项目的 HTML 文件中的脚本标签。"),(0,t.kt)("p",null,"webpack 将根据以下条件自动拆分 chunks："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"新的 chunk 可以被共享，或者模块来自于 ",(0,t.kt)("inlineCode",{parentName:"li"},"node_modules")," 文件夹"),(0,t.kt)("li",{parentName:"ul"},"新的 chunk 体积大于 20kb（在进行 min+gz 之前的体积）"),(0,t.kt)("li",{parentName:"ul"},"当按需加载 chunks 时，并行请求的最大数量小于或等于 30"),(0,t.kt)("li",{parentName:"ul"},"当加载初始化页面时，并发请求的最大数量小于或等于 30")),(0,t.kt)("p",null,"当尝试满足最后两个条件时，最好使用较大的 chunks。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"configuration",parentName:"h2"}),"配置",(0,t.kt)("a",{href:"#configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack 为希望对该功能进行更多控制的开发者提供了一组选项。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"选择了默认配置为了符合 Web 性能最佳实践，但是项目的最佳策略可能有所不同。如果要更改配置，则应评估所做更改的影响，以确保有真正的收益。")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"optimizationsplitchunks",parentName:"h2"}),"optimization.splitChunks",(0,t.kt)("a",{href:"#optimizationsplitchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"下面这个配置对象代表 ",(0,t.kt)("inlineCode",{parentName:"p"},"SplitChunksPlugin")," 的默认行为。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'async'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minSize",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"20000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minRemainingSize",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      maxAsyncRequests",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"30"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      maxInitialRequests",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"30"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      enforceSizeThreshold",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"50000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          priority",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"-"),(0,t.kt)("span",{className:"token number",parentName:"code"},"10"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          priority",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"-"),(0,t.kt)("span",{className:"token number",parentName:"code"},"20"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"当 webpack 处理文件路径时，它们始终包含 Unix 系统中的 ",(0,t.kt)("inlineCode",{parentName:"p"},"/")," 和 Windows 系统中的 ",(0,t.kt)("inlineCode",{parentName:"p"},"\\"),"。这就是为什么在 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 字段中使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"[\\\\/]")," 来表示路径分隔符的原因。",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 中的 ",(0,t.kt)("inlineCode",{parentName:"p"},"/")," 或 ",(0,t.kt)("inlineCode",{parentName:"p"},"\\")," 会在跨平台使用时产生问题。")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"从 webpack 5 开始，不再允许将 entry 名称传递给 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 或者为 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.name")," 使用现有的 chunk 的名称。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksautomaticnamedelimiter",parentName:"h3"}),"splitChunks.automaticNameDelimiter",(0,t.kt)("a",{href:"#splitchunksautomaticnamedelimiter","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string = '~'")),(0,t.kt)("p",null,"默认情况下，webpack 将使用 chunk 的来源和名称生成名称（例如 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendors~main.js"),"）。此选项使你可以指定用于生成名称的分隔符。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkschunks",parentName:"h3"}),"splitChunks.chunks",(0,t.kt)("a",{href:"#splitchunkschunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string = 'async'")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (chunk)")),(0,t.kt)("p",null,"这表明将选择哪些 chunk 进行优化。当提供一个字符串，有效值为 ",(0,t.kt)("inlineCode",{parentName:"p"},"all"),"，",(0,t.kt)("inlineCode",{parentName:"p"},"async")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"initial"),"。设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"all")," 可能特别强大，因为这意味着 chunk 可以在异步和非异步 chunk 之间共享。"),(0,t.kt)("p",null,"Note that it is applied to the fallback cache group as well (",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.chunks"),")."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// include all types of chunks"),"\n      chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"或者，你也可以提供一个函数去做更多的控制。这个函数的返回值将决定是否包含每一个 chunk。"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token function",parentName:"code"},"chunks"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunk"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// exclude `my-excluded-chunk`"),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!==")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-excluded-chunk'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"你可以将此配置与 ",(0,t.kt)("a",{href:"/plugins/html-webpack-plugin/",parentName:"p"},"HtmlWebpackPlugin")," 结合使用。它将为你注入所有生成的 vendor chunks。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxasyncrequests",parentName:"h3"}),"splitChunks.maxAsyncRequests",(0,t.kt)("a",{href:"#splitchunksmaxasyncrequests","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 30")),(0,t.kt)("p",null,"按需加载时的最大并行请求数。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxinitialrequests",parentName:"h3"}),"splitChunks.maxInitialRequests",(0,t.kt)("a",{href:"#splitchunksmaxinitialrequests","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 30")),(0,t.kt)("p",null,"入口点的最大并行请求数。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksdefaultsizetypes",parentName:"h3"}),"splitChunks.defaultSizeTypes",(0,t.kt)("a",{href:"#splitchunksdefaultsizetypes","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"[string] = ['javascript', 'unknown']")),(0,t.kt)("p",null,"Sets the size types which are used when a number is used for sizes."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminchunks",parentName:"h3"}),"splitChunks.minChunks",(0,t.kt)("a",{href:"#splitchunksminchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 1")),(0,t.kt)("p",null,"拆分前必须共享模块的最小 chunks 数。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitChunkshidePathInfo",parentName:"h3"}),"splitChunks.hidePathInfo",(0,t.kt)("a",{href:"#splitChunkshidePathInfo","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean")),(0,t.kt)("p",null,"为由 maxSize 分割的部分创建名称时，阻止公开路径信息。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminsize",parentName:"h3"}),"splitChunks.minSize",(0,t.kt)("a",{href:"#splitchunksminsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 20000")," ",(0,t.kt)("inlineCode",{parentName:"p"},"{ [index: string]: number }")),(0,t.kt)("p",null,"生成 chunk 的最小体积（以 bytes 为单位）。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminsizereduction",parentName:"h3"}),"splitChunks.minSizeReduction",(0,t.kt)("a",{href:"#splitchunksminsizereduction","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")," ",(0,t.kt)("inlineCode",{parentName:"p"},"{ [index: string]: number }")),(0,t.kt)("p",null,"生成 chunk 所需的主 chunk（bundle）的最小体积（以字节为单位）缩减。这意味着如果分割成一个 chunk 并没有减少主 chunk（bundle）的给定字节数，它将不会被分割，即使它满足 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize"),"。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"为了生成 chunk，",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSizeReduction")," 与 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize")," 都需要被满足。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksenforcesizethreshold",parentName:"h3"}),"splitChunks.enforceSizeThreshold",(0,t.kt)("a",{href:"#splitchunksenforcesizethreshold","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupenforcesizethreshold",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.enforceSizeThreshold"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupenforcesizethreshold","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 50000")),(0,t.kt)("p",null,"强制执行拆分的体积阈值和其他限制（minRemainingSize，maxAsyncRequests，maxInitialRequests）将被忽略。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminremainingsize",parentName:"h3"}),"splitChunks.minRemainingSize",(0,t.kt)("a",{href:"#splitchunksminremainingsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupminremainingsize",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.minRemainingSize"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupminremainingsize","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 0")),(0,t.kt)("p",null,"在 webpack 5 中引入了 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize")," 选项，通过确保拆分后剩余的最小 chunk 体积超过限制来避免大小为零的模块。 ",(0,t.kt)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},"'development' 模式")," 中默认为 ",(0,t.kt)("inlineCode",{parentName:"p"},"0"),"。对于其他情况，",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize")," 默认为 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize")," 的值，因此除需要深度控制的极少数情况外，不需要手动指定它。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize")," 仅在剩余单个 chunk 时生效。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkslayer",parentName:"h3"}),"splitChunks.layer",(0,t.kt)("a",{href:"#splitchunkslayer","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouplayer",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.layer"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouplayer","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"按模块层将模块分配给缓存组。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxsize",parentName:"h3"}),"splitChunks.maxSize",(0,t.kt)("a",{href:"#splitchunksmaxsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 0")),(0,t.kt)("p",null,"使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"（每个缓存组 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.cacheGroups[x].maxSize")," 全局使用 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.maxSize")," 或对后备缓存组 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.fallbackCacheGroup.maxSize")," 使用）告诉 webpack 尝试将大于 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 个字节的 chunk 分割成较小的部分。 这些较小的部分在体积上至少为 ",(0,t.kt)("inlineCode",{parentName:"p"},"minSize"),"（仅次于 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"）。\n该算法是确定性的，对模块的更改只会产生局部影响。这样，在使用长期缓存时就可以使用它并且不需要记录。",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 只是一个提示，当模块大于 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 或者拆分不符合 ",(0,t.kt)("inlineCode",{parentName:"p"},"minSize")," 时可能会被违反。"),(0,t.kt)("p",null,"当 chunk 已经有一个名称时，每个部分将获得一个从该名称派生的新名称。 根据 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.hidePathInfo")," 的值，它将添加一个从第一个模块名称或其哈希值派生的密钥。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 选项旨在与 HTTP/2 和长期缓存一起使用。它增加了请求数量以实现更好的缓存。它还可以用于减小文件大小，以加快二次构建速度。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 比 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialRequest/maxAsyncRequests")," 具有更高的优先级。实际优先级是 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialRequest/maxAsyncRequests < maxSize < minSize"),"。")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"设置 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 的值会同时设置 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize")," 的值。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxasyncsize",parentName:"h3"}),"splitChunks.maxAsyncSize",(0,t.kt)("a",{href:"#splitchunksmaxasyncsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,"像 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 一样，",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize")," 可以为 cacheGroups（",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.maxAsyncSize"),"）或 fallback 缓存组（",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.maxAsyncSize")," ）全局应用（",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.maxAsyncSize"),"）"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 的区别在于 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize")," 仅会影响按需加载 chunk。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxinitialsize",parentName:"h3"}),"splitChunks.maxInitialSize",(0,t.kt)("a",{href:"#splitchunksmaxinitialsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,"像 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 一样，",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize")," 可以对 cacheGroups（",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.maxInitialSize"),"）或 fallback 缓存组（",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.maxInitialSize"),"）全局应用（splitChunks.maxInitialSize）。"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 的区别在于 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize")," 仅会影响初始加载 chunks。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksname",parentName:"h3"}),"splitChunks.name",(0,t.kt)("a",{href:"#splitchunksname","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = false")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (module, chunks, cacheGroupKey) => string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"每个 cacheGroup 也可以使用：",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.name"),"。"),(0,t.kt)("p",null,"拆分 chunk 的名称。设为 ",(0,t.kt)("inlineCode",{parentName:"p"},"false")," 将保持 chunk 的相同名称，因此不会不必要地更改名称。这是生产环境下构建的建议值。"),(0,t.kt)("p",null,"提供字符串或函数使你可以使用自定义名称。指定字符串或始终返回相同字符串的函数会将所有常见模块和 vendor 合并为一个 chunk。这可能会导致更大的初始下载量并减慢页面加载速度。"),(0,t.kt)("p",null,"如果你选择指定一个函数，则可能会发现 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk.name")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk.hash")," 属性（其中 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk")," 是 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunks")," 数组的一个元素）在选择 chunk 名时特别有用。"),(0,t.kt)("p",null,"如果 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.name")," 与 ",(0,t.kt)("a",{href:"/configuration/entry-context/#entry",parentName:"p"},"entry point")," 名称匹配，entry point 将被删除。"),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.name")," can be used to move modules into a chunk that is a parent of the source chunk. For example, use ",(0,t.kt)("inlineCode",{parentName:"p"},'name: "entry-name"')," to move modules into the ",(0,t.kt)("inlineCode",{parentName:"p"},"entry-name")," chunk. You can also use on demand named chunks, but you must be careful that the selected modules are only used under this chunk.")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"main.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," _ ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'lodash'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nconsole",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"_",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Hello'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"' '"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// cacheGroupKey here is `commons` as the key of the cacheGroup"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"name"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," cacheGroupKey"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," moduleFileName ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," module\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"identifier"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"split"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'/'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"reduceRight"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"item"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," item",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," allChunksNames ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"map"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"item"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," item",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'~'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"cacheGroupKey",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"allChunksNames",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"moduleFileName",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"使用以下 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks")," 配置来运行 webpack 也会输出一组公用组，其下一个名称为：",(0,t.kt)("inlineCode",{parentName:"p"},"commons-main-lodash.js.e7519d2bb8777058fa27.js"),"（以哈希方式作为真实世界输出示例）。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"在为不同的拆分 chunk 分配相同的名称时，所有 vendor 模块都放在一个共享的 chunk 中，尽管不建议这样做，因为这可能会导致下载更多代码。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksusedexports",parentName:"h3"}),"splitChunks.usedExports",(0,t.kt)("a",{href:"#splitchunksusedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupusedexports",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups{cacheGroup}.usedExports"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupusedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,t.kt)("p",null,"弄清哪些 export 被模块使用，以混淆 export 名称，省略未使用的 export，并生成有效的代码。\n当它为 ",(0,t.kt)("inlineCode",{parentName:"p"},"true")," 时：分析每个运行时使用的出口，当它为 ",(0,t.kt)("inlineCode",{parentName:"p"},'"global"')," 时：分析所有运行时的全局 export 组合）。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkscachegroups",parentName:"h3"}),"splitChunks.cacheGroups",(0,t.kt)("a",{href:"#splitchunkscachegroups","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"缓存组可以继承和/或覆盖来自 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.*")," 的任何选项。但是 ",(0,t.kt)("inlineCode",{parentName:"p"},"test"),"、",(0,t.kt)("inlineCode",{parentName:"p"},"priority")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"reuseExistingChunk")," 只能在缓存组级别上进行配置。将它们设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),"以禁用任何默认缓存组。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouppriority",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.priority"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouppriority","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = -20")),(0,t.kt)("p",null,"一个模块可以属于多个缓存组。优化将优先考虑具有更高 ",(0,t.kt)("inlineCode",{parentName:"p"},"priority"),"（优先级）的缓存组。默认组的优先级为负，以允许自定义组获得更高的优先级（自定义组的默认值为 ",(0,t.kt)("inlineCode",{parentName:"p"},"0"),"）。"),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupreuseexistingchunk",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.reuseExistingChunk"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupreuseexistingchunk","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,t.kt)("p",null,"如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块。这可能会影响 chunk 的结果文件名。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouptype",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.type"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouptype","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")," ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"允许按模块类型将模块分配给缓存组。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        json",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          type",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'json'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupstest",parentName:"h4"}),"splitChunks.cacheGroups.test",(0,t.kt)("a",{href:"#splitchunkscachegroupstest","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouptest",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.test"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouptest","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, { chunkGraph, moduleGraph }) => boolean")," ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"控制此缓存组选择的模块。省略它会选择所有模块。它可以匹配绝对模块资源路径或 chunk 名称。匹配 chunk 名称时，将选择 chunk 中的所有模块。"),(0,t.kt)("p",null,"为 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 提供一个函数："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        svgGroup",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"test"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// `module.resource` contains the absolute path of the file on disk."),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Note the usage of `path.sep` instead of / or \\, for cross-platform compatibility."),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"&&"),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"endsWith"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'.svg'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"&&"),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"includes"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"sep",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"cacheable_svgs"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"sep",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n            ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        byModuleTypeGroup",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"test"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"type ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'javascript/auto'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"为了查看 ",(0,t.kt)("inlineCode",{parentName:"p"},"module")," and ",(0,t.kt)("inlineCode",{parentName:"p"},"chunks")," 对象中可用的信息，你可以在回调函数中放入 ",(0,t.kt)("inlineCode",{parentName:"p"},"debugger;")," 语句。然后 ",(0,t.kt)("a",{href:"/contribute/debugging/#devtools",parentName:"p"},"以调试模式运行 webpack 构建")," 检查 Chromium DevTools 中的参数。"),(0,t.kt)("p",null,"向 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 提供 ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp"),"："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Note the usage of `[\\\\/]` as a path separator for cross-platform compatibility."),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]|vendor[\\\\/]analytics_provider|vendor[\\\\/]other_lib/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupfilename",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.filename"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupfilename","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (pathData, assetInfo) => string")),(0,t.kt)("p",null,"仅在初始 chunk 时才允许覆盖文件名。\n也可以在 ",(0,t.kt)("a",{href:"/configuration/output/#outputfilename",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"output.filename"))," 中使用所有占位符。"),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"也可以在 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.filename")," 中全局设置此选项，但是不建议这样做，如果 ",(0,t.kt)("a",{href:"#splitchunkschunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.chunks"))," 未设置为 ",(0,t.kt)("inlineCode",{parentName:"p"},"'initial'"),"，则可能会导致错误。避免全局设置。")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          filename",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'[name].bundle.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"若为函数，则："),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"filename"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"pathData"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Use pathData object for generating filename string based on your requirements"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"pathData",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"name",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-bundle.js"),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"通过提供以文件名开头的路径 ",(0,t.kt)("inlineCode",{parentName:"p"},"'js/vendor/bundle.js'"),"，可以创建文件夹结构。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          filename",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'js/[name]/bundle.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupenforce",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.enforce"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupenforce","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,t.kt)("p",null,"告诉 webpack 忽略 ",(0,t.kt)("a",{href:"#splitchunksminsize",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.minSize")),"、",(0,t.kt)("a",{href:"#splitchunksminchunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.minChunks")),"、",(0,t.kt)("a",{href:"#splitchunksmaxasyncrequests",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.maxAsyncRequests"))," 和 ",(0,t.kt)("a",{href:"#splitchunksmaxinitialrequests",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.maxInitialRequests"))," 选项，并始终为此缓存组创建 chunk。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          enforce",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupidhint",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.idHint"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupidhint","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"设置 chunk id 的提示。 它将被添加到 chunk 的文件名中。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          idHint",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendors'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"examples",parentName:"h2"}),"Examples",(0,t.kt)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"defaults-example-1",parentName:"h3"}),"Defaults: Example 1",(0,t.kt)("a",{href:"#defaults-example-1","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// index.js"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// dynamic import"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// a.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'react'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"结果：")," 将创建一个单独的包含 ",(0,t.kt)("inlineCode",{parentName:"p"},"react")," 的 chunk。在导入调用中，此 chunk 并行加载到包含 ",(0,t.kt)("inlineCode",{parentName:"p"},"./a")," 的原始 chunk 中。"),(0,t.kt)("p",null,"为什么："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"条件1：chunk 包含来自 ",(0,t.kt)("inlineCode",{parentName:"li"},"node_modules")," 的模块"),(0,t.kt)("li",{parentName:"ul"},"条件2：",(0,t.kt)("inlineCode",{parentName:"li"},"react")," 大于 30kb"),(0,t.kt)("li",{parentName:"ul"},"条件3：导入调用中的并行请求数为 2"),(0,t.kt)("li",{parentName:"ul"},"条件4：在初始页面加载时不影响请求")),(0,t.kt)("p",null,"这背后的原因是什么？",(0,t.kt)("inlineCode",{parentName:"p"},"react")," 可能不会像你的应用程序代码那样频繁地更改。通过将其移动到单独的 chunk 中，可以将该 chunk 与应用程序代码分开进行缓存（假设你使用的是 chunkhash，records，Cache-Control 或其他长期缓存方法）。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"defaults-example-2",parentName:"h3"}),"Defaults: Example 2",(0,t.kt)("a",{href:"#defaults-example-2","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// entry.js"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// dynamic imports"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./b'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// a.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// helpers is 40kb in size"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// b.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./more-helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// more-helpers is also 40kb in size"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"结果：")," 将创建一个单独的 chunk，其中包含 ",(0,t.kt)("inlineCode",{parentName:"p"},"./helpers")," 及其所有依赖项。在导入调用时，此 chunk 与原始 chunks 并行加载。"),(0,t.kt)("p",null,"为什么："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"条件1：chunk 在两个导入调用之间共享"),(0,t.kt)("li",{parentName:"ul"},"条件2：",(0,t.kt)("inlineCode",{parentName:"li"},"helpers")," 大于 30kb"),(0,t.kt)("li",{parentName:"ul"},"条件3：导入调用中的并行请求数为 2"),(0,t.kt)("li",{parentName:"ul"},"条件4：在初始页面加载时不影响请求")),(0,t.kt)("p",null,"将 ",(0,t.kt)("inlineCode",{parentName:"p"},"helpers")," 的内容放入每个 chunk 中将导致其代码被下载两次。通过使用单独的块，这只会发生一次。我们会进行额外的请求，这可以视为一种折衷。这就是为什么最小体积为 30kb 的原因。"),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-1",parentName:"h3"}),"Split Chunks: Example 1",(0,t.kt)("a",{href:"#split-chunks-example-1","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"创建一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"commons")," chunk，其中包括入口（entry points）之间所有共享的代码。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'commons'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'initial'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"此配置可以扩大你的初始 bundles，建议在不需要立即使用模块时使用动态导入。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-2",parentName:"h3"}),"Split Chunks: Example 2",(0,t.kt)("a",{href:"#split-chunks-example-2","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"创建一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendors")," chunk，其中包括整个应用程序中 ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules")," 的所有代码。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendors'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"这可能会导致包含所有外部程序包的较大 chunk。建议仅包括你的核心框架和实用程序，并动态加载其余依赖项。")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-3",parentName:"h3"}),"Split Chunks: Example 3",(0,t.kt)("a",{href:"#split-chunks-example-3","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"创建一个 ",(0,t.kt)("inlineCode",{parentName:"p"},"custom vendor")," chunk，其中包含与 ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," 匹配的某些 ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules")," 包。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        vendor",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendor'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"这将导致将 ",(0,t.kt)("inlineCode",{parentName:"p"},"react")," 和 ",(0,t.kt)("inlineCode",{parentName:"p"},"react-dom")," 分成一个单独的 chunk。 如果你不确定 chunk 中包含哪些包，请参考 ",(0,t.kt)("a",{href:"/guides/code-splitting/#bundle-analysis",parentName:"p"},"Bundle Analysis")," 部分以获取详细信息。")))}s.isMDXComponent=!0,a.default=s}}]);