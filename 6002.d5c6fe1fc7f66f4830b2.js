"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6002],{6002:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"提示"),(0,t.kt)("p",{parentName:"aside"},"本指南继承自",(0,t.kt)("a",{href:"/guides/code-splitting",parentName:"p"},"代码分离"),"。如果你尚未阅读该指南，请先行阅读。")),(0,t.kt)("p",null,"懒加载或者按需加载，是一种很好的优化网页或应用的方式。这种方式实际上是先把你的代码在一些逻辑断点处分离开，然后在一些代码块中完成某些操作后，立即引用或即将引用另外一些新的代码块。这样加快了应用的初始加载速度，减轻了它的总体体积，因为某些代码块可能永远不会被加载。"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"example",parentName:"h2"}),"示例",(0,t.kt)("a",{href:"#example","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"我们在",(0,t.kt)("a",{href:"/guides/code-splitting#dynamic-imports",parentName:"p"},"代码分离"),"中的例子基础上，进一步做些调整来说明这个概念。那里的代码确实会在脚本运行的时候产生一个分离的代码块 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash.bundle.js")," ，在技术概念上“懒加载”它。问题是加载这个包并不需要用户的交互 - 意思是每次加载页面的时候都会请求它。这样做并没有对我们有很多帮助，还会对性能产生负面影响。"),(0,t.kt)("p",null,"我们试试不同的做法。我们增加一个交互，当用户点击按钮的时候用 console 打印一些文字。但是会等到第一次交互的时候再加载那个代码块（",(0,t.kt)("inlineCode",{parentName:"p"},"print.js"),"）。为此，我们返回到代码分离的例子中，把 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash")," 放到主代码块中，重新运行 ",(0,t.kt)("em",{parentName:"p"},"代码分离")," 中的代码 ",(0,t.kt)("a",{href:"/guides/code-splitting#dynamic-imports",parentName:"p"},"final ",(0,t.kt)("em",{parentName:"a"},"Dynamic Imports")," example"),"。"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n|- /src\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- index.js\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," |- print.js\n")),"|- /node_modules")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/print.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'The print.js module has loaded! See the network tab in dev tools...'"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Button Clicked: Here\\'s \"some text\"!'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," import _ from 'lodash';\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," async function getComponent() {\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," function component() {\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const element = document.createElement('div');\n")),(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const _ = await import(/* webpackChunkName: \"lodash\" */ 'lodash');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const button = document.createElement('button');\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   const br = document.createElement('br');\n")),"\n",(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   button.innerHTML = 'Click me and look at the console!';\n")),(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.appendChild(br);\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   element.appendChild(button);\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // Note that because a network request is involved, some indication\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   // of loading would need to be shown in a production-level site/app.\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   button.onclick = e => import(/* webpackChunkName: \"print\" */ './print').then(module => {\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     const print = module.default;\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"     print();\n"),(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   });\n")),"\n",(0,t.kt)("span",{className:"token unchanged",parentName:"code"},(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"},"   return element;\n"),(0,t.kt)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,t.kt)("span",{className:"token line",parentName:"span"}," }\n")),"\n",(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," getComponent().then(component => {\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"   document.body.appendChild(component);\n"),(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"}," });\n")),(0,t.kt)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,t.kt)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,t.kt)("span",{className:"token line",parentName:"span"}," document.body.appendChild(component());")))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"警告"),(0,t.kt)("p",{parentName:"aside"},"注意当调用 ES6 模块的 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 方法（引入模块）时，必须指向模块的 ",(0,t.kt)("inlineCode",{parentName:"p"},".default")," 值，因为它才是 promise 被处理后返回的实际的 ",(0,t.kt)("inlineCode",{parentName:"p"},"module")," 对象。")),(0,t.kt)("p",null,"现在运行 webpack 来验证一下我们的懒加载功能："),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".\n          Asset       Size  Chunks                    Chunk Names\nprint.bundle.js  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"417")," bytes       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"         print\nindex.bundle.js     ",(0,t.kt)("span",{className:"token number",parentName:"code"},"548")," kB       ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"big",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"  index\n     index.html  ",(0,t.kt)("span",{className:"token number",parentName:"code"},"189")," bytes          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},".."),".")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"frameworks",parentName:"h2"}),"框架",(0,t.kt)("a",{href:"#frameworks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"许多框架和类库对于如何用它们自己的方式来实现（懒加载）都有自己的建议。这里有一些例子："),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"React: ",(0,t.kt)("a",{href:"https://reactjs.org/docs/code-splitting.html",parentName:"li"},"Code Splitting and Lazy Loading")),(0,t.kt)("li",{parentName:"ul"},"Vue: ",(0,t.kt)("a",{href:"https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/",parentName:"li"},"Dynamic Imports in Vue.js for better performance")),(0,t.kt)("li",{parentName:"ul"},"Angular: ",(0,t.kt)("a",{href:"https://angular.io/guide/router#milestone-6-asynchronous-routing",parentName:"li"},"Lazy Loading route configuration")," and ",(0,t.kt)("a",{href:"https://medium.com/@var_bin/angularjs-webpack-lazyload-bb7977f390dd",parentName:"li"},"AngularJS + webpack = lazyLoad"))))}p.isMDXComponent=!0,a.default=p}}]);