"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6675],{6675:function(e,a,t){t.r(a),t(7378);var n=t(2682);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o.apply(this,arguments)}function s(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",o({components:a},t),(0,n.kt)("div",{align:"center"}),(0,n.kt)("p",null,(0,n.kt)("a",{href:"https://npmjs.com/package/thread-loader",parentName:"p"},(0,n.kt)("img",{src:"https://img.shields.io/npm/v/thread-loader.svg",alt:"npm",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://nodejs.org",parentName:"p"},(0,n.kt)("img",{src:"https://img.shields.io/node/v/thread-loader.svg",alt:"node",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://david-dm.org/webpack-contrib/thread-loader",parentName:"p"},(0,n.kt)("img",{src:"https://david-dm.org/webpack-contrib/thread-loader.svg",alt:"deps",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://github.com/webpack-contrib/thread-loader/actions",parentName:"p"},(0,n.kt)("img",{src:"https://github.com/webpack-contrib/thread-loader/workflows/thread-loader/badge.svg",alt:"tests",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://codecov.io/gh/webpack-contrib/thread-loader",parentName:"p"},(0,n.kt)("img",{src:"https://codecov.io/gh/webpack-contrib/thread-loader/branch/master/graph/badge.svg",alt:"coverage",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://gitter.im/webpack/webpack",parentName:"p"},(0,n.kt)("img",{src:"https://badges.gitter.im/webpack/webpack.svg",alt:"chat",parentName:"a"})),"\n",(0,n.kt)("a",{href:"https://packagephobia.now.sh/result?p=thread-loader",parentName:"p"},(0,n.kt)("img",{src:"https://packagephobia.now.sh/badge?p=thread-loader",alt:"size",parentName:"a"}))),(0,n.kt)("p",null,"运行以下 loader 在 worker pool 中。"),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"getting-started",parentName:"h2"}),"快速开始",(0,n.kt)("a",{href:"#getting-started","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,n.kt)("span",{className:"token function",parentName:"code"},"npm")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"install")," --save-dev thread-loader")),(0,n.kt)("p",null,"使用时，需将此 loader 放置在其他 loader 之前。放置在此 loader 之后的 loader 会在一个独立的 worker 池中运行。"),(0,n.kt)("p",null,"在 worker 池中运行的 loader 是受到限制的。例如："),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"这些 loader 不能生成新的文件。"),(0,n.kt)("li",{parentName:"ul"},"这些 loader 不能使用自定义的 loader API（也就是说，不能通过插件来自定义）。"),(0,n.kt)("li",{parentName:"ul"},"这些 loader 无法获取 webpack 的配置。")),(0,n.kt)("p",null,"每个 worker 都是一个独立的 node.js 进程，其开销大约为 600ms 左右。同时会限制跨进程的数据交换。"),(0,n.kt)("p",null,"请仅在耗时的操作中使用此 loader！"),(0,n.kt)("h3",null,(0,n.kt)("span",{id:"examples",parentName:"h3"}),"示例",(0,n.kt)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  module",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token regex",parentName:"code"},"/\\.js$/"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        include",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," path",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'src'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        use",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n          ",(0,n.kt)("span",{className:"token string",parentName:"code"},'"thread-loader"'),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 耗时的 loader （例如 babel-loader）"),"\n        ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"with options")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"use",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    loader",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},'"thread-loader"'),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 有同样配置的 loader 会共享一个 worker 池"),"\n    options",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 产生的 worker 的数量，默认是 (cpu 核心数 - 1)，或者，"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 在 require('os').cpus() 是 undefined 时回退至 1"),"\n      workers",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"2"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 一个 worker 进程中并行执行工作的数量"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 默认为 20"),"\n      workerParallelJobs",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"50"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 额外的 node.js 参数"),"\n      workerNodeArgs",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token string",parentName:"code"},"'--max-old-space-size=1024'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 允许重新生成一个僵死的 work 池"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 这个过程会降低整体编译速度"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 并且开发环境应该设置为 false"),"\n      poolRespawn",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 闲置时定时删除 worker 进程"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 默认为 500（ms）"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 可以设置为无穷大，这样在监视模式(--watch)下可以保持 worker 持续存在"),"\n      poolTimeout",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"2000"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 池分配给 worker 的工作数量"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 默认为 200"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 降低这个数值会降低总体的效率，但是会提升工作分布更均一"),"\n      poolParallelJobs",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"50"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 池的名称"),"\n      ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 可以修改名称来创建其余选项都一样的池"),"\n      name",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},'"my-pool"'),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 耗时的 loader（例如 babel-loader）"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"预警")),(0,n.kt)("p",null,"可以通过预警 worker 池来防止启动 worker 时的高延时。"),(0,n.kt)("p",null,"这会启动池内最大数量的 worker 并把指定的模块加载到 node.js 的模块缓存中。"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," threadLoader ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'thread-loader'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nthreadLoader",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"warmup"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 池选项，例如传递给 loader 选项"),"\n    ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 必须匹配 loader 选项才能启动正确的池"),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 加载模块"),"\n    ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 可以是任意模块，例如"),"\n    ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'babel-loader'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'babel-preset-es2015'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'sass-loader'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"contributing",parentName:"h2"}),"贡献",(0,n.kt)("a",{href:"#contributing","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"如果还未阅读贡献指南，请抽时间进行阅读。"),(0,n.kt)("p",null,(0,n.kt)("a",{href:"https://github.com/webpack-contrib/thread-loader/blob/master/.github/CONTRIBUTING.md",parentName:"p"},"CONTRIBUTING")),(0,n.kt)("h2",null,(0,n.kt)("span",{id:"license",parentName:"h2"}),"License",(0,n.kt)("a",{href:"#license","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("a",{href:"https://github.com/webpack-contrib/thread-loader/blob/master/LICENSE",parentName:"p"},"MIT")))}s.isMDXComponent=!0,a.default=s}}]);